   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"temp_read.c"
  23              	.Ltext0:
  24              		.file 1 "../1wire/temp_read.c"
 21006              		.align	2
 21007              		.global	ustawStanOdczytywaniaTemperatury
 21008              		.thumb
 21009              		.thumb_func
 21011              	ustawStanOdczytywaniaTemperatury:
 21012              	.LFB29:
   1:../1wire/temp_read.c **** #include "temp_read.h"
   2:../1wire/temp_read.c **** #include <conversion.h>
   3:../1wire/temp_read.c **** #include <string.h>
   4:../1wire/temp_read.c **** #include "../sd_card/fatfs/ff.h"
   5:../1wire/temp_read.c **** #include "../RTC/rtc.h"
   6:../1wire/temp_read.c **** #include <stdio.h>
   7:../1wire/temp_read.c **** 
   8:../1wire/temp_read.c **** extern unsigned int gSensorIDs[MAXSENSORS][8];
   9:../1wire/temp_read.c **** 
  10:../1wire/temp_read.c **** // przechowuje stan maszyny stanów odczytywania temperatury
  11:../1wire/temp_read.c **** static uint8_t volatile stan_odczytywania_temp = 0;
  12:../1wire/temp_read.c **** static volatile uint8_t next_day;
  13:../1wire/temp_read.c **** 
  14:../1wire/temp_read.c **** static uint8_t liczba_czujnikow_temperatury;
  15:../1wire/temp_read.c **** 
  16:../1wire/temp_read.c **** char temperatura[MAX_LICZBA_CZUJNIKOW_TEMP][8];
  17:../1wire/temp_read.c **** 
  18:../1wire/temp_read.c **** void ustawStanOdczytywaniaTemperatury(uint8_t stan) {
 21013              		.loc 1 18 0
 21014              		.cfi_startproc
 21015              		@ args = 0, pretend = 0, frame = 0
 21016              		@ frame_needed = 0, uses_anonymous_args = 0
 21017              		@ link register save eliminated.
 21018              	.LVL0:
  19:../1wire/temp_read.c **** 	stan_odczytywania_temp = stan;
 21019              		.loc 1 19 0
 21020 0000 40F20003 		movw	r3, #:lower16:.LANCHOR0
 21021 0004 C0F20003 		movt	r3, #:upper16:.LANCHOR0
 21022 0008 1870     		strb	r0, [r3, #0]
  20:../1wire/temp_read.c **** }
 21023              		.loc 1 20 0
 21024 000a 7047     		bx	lr
 21025              		.cfi_endproc
 21026              	.LFE29:
 21028              		.section	.text.zamknijDzienLogowaniaTemperatury,"ax",%progbits
 21029              		.align	2
 21030              		.global	zamknijDzienLogowaniaTemperatury
 21031              		.thumb
 21032              		.thumb_func
 21034              	zamknijDzienLogowaniaTemperatury:
 21035              	.LFB30:
  21:../1wire/temp_read.c **** 
  22:../1wire/temp_read.c **** void zamknijDzienLogowaniaTemperatury() {
 21036              		.loc 1 22 0
 21037              		.cfi_startproc
 21038              		@ args = 0, pretend = 0, frame = 0
 21039              		@ frame_needed = 0, uses_anonymous_args = 0
 21040              		@ link register save eliminated.
  23:../1wire/temp_read.c **** 	next_day = 1;
 21041              		.loc 1 23 0
 21042 0000 40F20003 		movw	r3, #:lower16:.LANCHOR1
 21043 0004 C0F20003 		movt	r3, #:upper16:.LANCHOR1
 21044 0008 4FF00102 		mov	r2, #1
 21045 000c 1A70     		strb	r2, [r3, #0]
  24:../1wire/temp_read.c **** }
 21046              		.loc 1 24 0
 21047 000e 7047     		bx	lr
 21048              		.cfi_endproc
 21049              	.LFE30:
 21051              		.section	.text.odczytajStanOdczytywaniaTemperatury,"ax",%progbits
 21052              		.align	2
 21053              		.global	odczytajStanOdczytywaniaTemperatury
 21054              		.thumb
 21055              		.thumb_func
 21057              	odczytajStanOdczytywaniaTemperatury:
 21058              	.LFB31:
  25:../1wire/temp_read.c **** 
  26:../1wire/temp_read.c **** uint8_t odczytajStanOdczytywaniaTemperatury() {
 21059              		.loc 1 26 0
 21060              		.cfi_startproc
 21061              		@ args = 0, pretend = 0, frame = 0
 21062              		@ frame_needed = 0, uses_anonymous_args = 0
 21063              		@ link register save eliminated.
  27:../1wire/temp_read.c **** 	return stan_odczytywania_temp;
 21064              		.loc 1 27 0
 21065 0000 40F20003 		movw	r3, #:lower16:.LANCHOR0
 21066 0004 C0F20003 		movt	r3, #:upper16:.LANCHOR0
 21067 0008 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
  28:../1wire/temp_read.c **** }
 21068              		.loc 1 28 0
 21069 000a 7047     		bx	lr
 21070              		.cfi_endproc
 21071              	.LFE31:
 21073              		.section	.text.TempCheck,"ax",%progbits
 21074              		.align	2
 21075              		.global	TempCheck
 21076              		.thumb
 21077              		.thumb_func
 21079              	TempCheck:
 21080              	.LFB32:
  29:../1wire/temp_read.c **** 
  30:../1wire/temp_read.c **** void TempCheck(void)
  31:../1wire/temp_read.c **** {
 21081              		.loc 1 31 0
 21082              		.cfi_startproc
 21083              		@ args = 0, pretend = 0, frame = 96
 21084              		@ frame_needed = 0, uses_anonymous_args = 0
 21085 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 21086              	.LCFI0:
 21087              		.cfi_def_cfa_offset 36
 21088 0004 9DB0     		sub	sp, sp, #116
 21089              	.LCFI1:
 21090              		.cfi_def_cfa_offset 152
  32:../1wire/temp_read.c **** 		int8_t i = 0;
  33:../1wire/temp_read.c **** 		int8_t temp_calk;
  34:../1wire/temp_read.c **** 		int8_t temp_ulam;
  35:../1wire/temp_read.c **** 		unsigned char ret = 1;
  36:../1wire/temp_read.c **** 
  37:../1wire/temp_read.c **** 		#if SD_CARD
  38:../1wire/temp_read.c **** 		UINT bytesWritten;
  39:../1wire/temp_read.c **** 		char stringBuf[15];
  40:../1wire/temp_read.c **** 		FIL file;
  41:../1wire/temp_read.c **** 		RTCDate date;
  42:../1wire/temp_read.c **** 		#endif
  43:../1wire/temp_read.c **** 
  44:../1wire/temp_read.c **** 		if ( stan_odczytywania_temp == READ_REQUEST) 						// wywolano zadanie odczytania temperatury
 21091              		.loc 1 44 0
 21092 0006 40F20003 		movw	r3, #:lower16:.LANCHOR0
 21093 000a C0F20003 		movt	r3, #:upper16:.LANCHOR0
 21094 000e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 21095 0010 012B     		cmp	r3, #1
 21096 0012 26D1     		bne	.L8
 21097              		.cfi_offset 14, -4
 21098              		.cfi_offset 11, -8
 21099              		.cfi_offset 10, -12
 21100              		.cfi_offset 9, -16
 21101              		.cfi_offset 8, -20
 21102              		.cfi_offset 7, -24
 21103              		.cfi_offset 6, -28
 21104              		.cfi_offset 5, -32
 21105              		.cfi_offset 4, -36
  45:../1wire/temp_read.c **** 		{
  46:../1wire/temp_read.c **** 				liczba_czujnikow_temperatury = search_sensors();			//szukamy sensorow, wpisze ich id do tablicy
 21106              		.loc 1 46 0
 21107 0014 FFF7FEFF 		bl	search_sensors
 21108 0018 40F20003 		movw	r3, #:lower16:.LANCHOR2
 21109 001c C0F20003 		movt	r3, #:upper16:.LANCHOR2
 21110 0020 1870     		strb	r0, [r3, #0]
  47:../1wire/temp_read.c **** 
  48:../1wire/temp_read.c **** 				if ( liczba_czujnikow_temperatury > MAX_LICZBA_CZUJNIKOW_TEMP )
 21111              		.loc 1 48 0
 21112 0022 0228     		cmp	r0, #2
 21113 0024 0CD9     		bls	.L9
  49:../1wire/temp_read.c **** 				{
  50:../1wire/temp_read.c **** 					liczba_czujnikow_temperatury = MAX_LICZBA_CZUJNIKOW_TEMP;
 21114              		.loc 1 50 0
 21115 0026 40F20003 		movw	r3, #:lower16:.LANCHOR2
 21116 002a C0F20003 		movt	r3, #:upper16:.LANCHOR2
 21117 002e 4FF00202 		mov	r2, #2
 21118 0032 1A70     		strb	r2, [r3, #0]
  51:../1wire/temp_read.c **** 
  52:../1wire/temp_read.c **** #if TEMP_UART_DEBUG
  53:../1wire/temp_read.c **** 					usart_printf("Za duzo czujnikow!\r\n");
 21119              		.loc 1 53 0
 21120 0034 40F20000 		movw	r0, #:lower16:.LC0
 21121 0038 C0F20000 		movt	r0, #:upper16:.LC0
 21122 003c FFF7FEFF 		bl	usart_printf
 21123              	.L9:
  54:../1wire/temp_read.c **** #endif
  55:../1wire/temp_read.c **** 
  56:../1wire/temp_read.c **** 				}
  57:../1wire/temp_read.c **** 
  58:../1wire/temp_read.c **** 				ret = ow_reset();
 21124              		.loc 1 58 0
 21125 0040 FFF7FEFF 		bl	ow_reset
  59:../1wire/temp_read.c **** 				ow_write_byte(0xCC);										//skip ROM
 21126              		.loc 1 59 0
 21127 0044 4FF0CC00 		mov	r0, #204
 21128 0048 FFF7FEFF 		bl	ow_write_byte
  60:../1wire/temp_read.c **** 				ow_write_byte(0x44);										//zacznij konwersje - zrobi ja kazdy czujnik
 21129              		.loc 1 60 0
 21130 004c 4FF04400 		mov	r0, #68
 21131 0050 FFF7FEFF 		bl	ow_write_byte
  61:../1wire/temp_read.c **** 				stan_odczytywania_temp = WAITING;
 21132              		.loc 1 61 0
 21133 0054 40F20003 		movw	r3, #:lower16:.LANCHOR0
 21134 0058 C0F20003 		movt	r3, #:upper16:.LANCHOR0
 21135 005c 4FF00202 		mov	r2, #2
 21136 0060 1A70     		strb	r2, [r3, #0]
 21137              	.L8:
  62:../1wire/temp_read.c **** 		}
  63:../1wire/temp_read.c **** 		if ( stan_odczytywania_temp == CONVERSION_FINISHED )				// minal czas konwersji
 21138              		.loc 1 63 0
 21139 0062 40F20003 		movw	r3, #:lower16:.LANCHOR0
 21140 0066 C0F20003 		movt	r3, #:upper16:.LANCHOR0
 21141 006a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 21142 006c 032B     		cmp	r3, #3
 21143 006e 40F0D680 		bne	.L17
  64:../1wire/temp_read.c **** 		{	
  65:../1wire/temp_read.c **** 			for (i = 0;i <  liczba_czujnikow_temperatury; i++)
 21144              		.loc 1 65 0
 21145 0072 40F20003 		movw	r3, #:lower16:.LANCHOR2
 21146 0076 C0F20003 		movt	r3, #:upper16:.LANCHOR2
 21147 007a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 21148 007c 002B     		cmp	r3, #0
 21149 007e 00F0C780 		beq	.L11
 21150 0082 4FF00006 		mov	r6, #0
 21151 0086 3446     		mov	r4, r6
 21152              	.LVL1:
  66:../1wire/temp_read.c **** 			{
  67:../1wire/temp_read.c **** 
  68:../1wire/temp_read.c **** 				//komenda odczytu dla pierwszego (indeks 0) czujnika
  69:../1wire/temp_read.c **** 				ow_command( 0xBE,&gSensorIDs[i][0] );
 21153              		.loc 1 69 0
 21154 0088 40F20008 		movw	r8, #:lower16:gSensorIDs
 21155 008c C0F20008 		movt	r8, #:upper16:gSensorIDs
  70:../1wire/temp_read.c **** 				
  71:../1wire/temp_read.c **** 				// Sprawdzamy czy nie wystapil blad CRC
  72:../1wire/temp_read.c **** 				if (read_temp(&temp_calk, &temp_ulam) == 1)		
  73:../1wire/temp_read.c **** 				{
  74:../1wire/temp_read.c **** 					
  75:../1wire/temp_read.c **** 					#if TEMP_UART_DEBUG
  76:../1wire/temp_read.c **** 					usart_printf("Blad crc\r\n");
  77:../1wire/temp_read.c **** 					#endif
  78:../1wire/temp_read.c **** 					
  79:../1wire/temp_read.c **** 					if (i == liczba_czujnikow_temperatury-1)
  80:../1wire/temp_read.c **** 						stan_odczytywania_temp = IDLE;
  81:../1wire/temp_read.c **** 					continue;
  82:../1wire/temp_read.c **** 				}
  83:../1wire/temp_read.c **** 				
  84:../1wire/temp_read.c **** #if TEMP_UART_DEBUG
  85:../1wire/temp_read.c **** 				min_printf("%d.%d\r\n", temp_calk, temp_ulam);
 21156              		.loc 1 85 0
 21157 0090 40F2000A 		movw	sl, #:lower16:.LC2
 21158 0094 C0F2000A 		movt	sl, #:upper16:.LC2
  86:../1wire/temp_read.c **** #endif
  87:../1wire/temp_read.c **** 				
  88:../1wire/temp_read.c **** 				// ----------------- ZAPIS TEMPERATURY DO BUFORA ------------------------- //
  89:../1wire/temp_read.c **** 				memset(temperatura[i], 0, 8);
 21159              		.loc 1 89 0
 21160 0098 40F20009 		movw	r9, #:lower16:temperatura
 21161 009c C0F20009 		movt	r9, #:upper16:temperatura
  90:../1wire/temp_read.c **** 				sprintf(temperatura[i], "\r\n%d.%d", temp_calk, temp_ulam);
 21162              		.loc 1 90 0
 21163 00a0 40F2000B 		movw	fp, #:lower16:.LC3
 21164 00a4 C0F2000B 		movt	fp, #:upper16:.LC3
  91:../1wire/temp_read.c **** 
  92:../1wire/temp_read.c **** 				// ----------------- ZAPIS TEMPERATURY NA KARTE SD ----------------------- //
  93:../1wire/temp_read.c **** 				// ----------------------------------------------------------------------- //
  94:../1wire/temp_read.c **** 
  95:../1wire/temp_read.c **** #if SD_CARD
  96:../1wire/temp_read.c **** 
  97:../1wire/temp_read.c **** 				//otwieramy do zapisu i odczytu, utworzy nowy plik jesli go nie ma
  98:../1wire/temp_read.c **** 				if( f_open(&file, "/temp.txt", FA_READ | FA_WRITE | FA_OPEN_ALWAYS) == FR_OK )
 21165              		.loc 1 98 0
 21166 00a8 40F20002 		movw	r2, #:lower16:.LC4
 21167 00ac C0F20002 		movt	r2, #:upper16:.LC4
 21168 00b0 0592     		str	r2, [sp, #20]
  99:../1wire/temp_read.c **** 				{
 100:../1wire/temp_read.c **** 					// przechodzimy na koniec
 101:../1wire/temp_read.c **** 					f_lseek(&file, f_size(&file));
 102:../1wire/temp_read.c **** 
 103:../1wire/temp_read.c **** 					// Oddzielanie dni
 104:../1wire/temp_read.c **** 					if (next_day == 1)
 105:../1wire/temp_read.c **** 					{
 106:../1wire/temp_read.c **** 						f_write(&file, "----------\r\n",12, &bytesWritten);
 107:../1wire/temp_read.c **** 						f_sync(&file);
 108:../1wire/temp_read.c **** 						f_lseek(&file, f_size(&file));
 109:../1wire/temp_read.c **** 						next_day = 0;
 110:../1wire/temp_read.c **** 					}
 111:../1wire/temp_read.c **** 
 112:../1wire/temp_read.c **** 					//odczytaj date z RTC
 113:../1wire/temp_read.c **** 					RTCgetTime(&date);
 114:../1wire/temp_read.c **** 
 115:../1wire/temp_read.c **** 					sprintf(stringBuf, "%d:%d [%d] : %d.%d\r\n", date.hour, date.minute, i, temp_calk, temp_ulam);
 116:../1wire/temp_read.c **** 					f_write(&file, stringBuf, strlen(stringBuf), &bytesWritten);
 117:../1wire/temp_read.c **** 
 118:../1wire/temp_read.c **** 					f_close(&file);
 119:../1wire/temp_read.c **** 
 120:../1wire/temp_read.c **** 				}
 121:../1wire/temp_read.c **** 				else {
 122:../1wire/temp_read.c **** #if TEMP_UART_DEBUG
 123:../1wire/temp_read.c **** 					min_printf("Blad zapisu temperatury\r\n");
 21169              		.loc 1 123 0
 21170 00b2 40F20003 		movw	r3, #:lower16:.LC7
 21171 00b6 C0F20003 		movt	r3, #:upper16:.LC7
 21172 00ba 0793     		str	r3, [sp, #28]
 21173              		.loc 1 104 0
 21174 00bc 40F20002 		movw	r2, #:lower16:.LANCHOR1
 21175 00c0 C0F20002 		movt	r2, #:upper16:.LANCHOR1
 21176 00c4 0692     		str	r2, [sp, #24]
 21177              		.loc 1 115 0
 21178 00c6 40F20003 		movw	r3, #:lower16:.LC6
 21179 00ca C0F20003 		movt	r3, #:upper16:.LC6
 21180 00ce 0893     		str	r3, [sp, #32]
 21181              		.loc 1 106 0
 21182 00d0 40F20002 		movw	r2, #:lower16:.LC5
 21183 00d4 C0F20002 		movt	r2, #:upper16:.LC5
 21184 00d8 0992     		str	r2, [sp, #36]
 21185              	.LVL2:
 21186              	.L16:
 21187              		.loc 1 69 0
 21188 00da 65B2     		sxtb	r5, r4
 21189 00dc 4FF0BE00 		mov	r0, #190
 21190 00e0 08EB4511 		add	r1, r8, r5, lsl #5
 21191 00e4 FFF7FEFF 		bl	ow_command
 21192              		.loc 1 72 0
 21193 00e8 0DF16F00 		add	r0, sp, #111
 21194 00ec 0DF16E01 		add	r1, sp, #110
 21195 00f0 FFF7FEFF 		bl	read_temp
 21196 00f4 0128     		cmp	r0, #1
 21197 00f6 16D1     		bne	.L12
 21198              		.loc 1 76 0
 21199 00f8 40F20000 		movw	r0, #:lower16:.LC1
 21200 00fc C0F20000 		movt	r0, #:upper16:.LC1
 21201 0100 FFF7FEFF 		bl	usart_printf
 21202              		.loc 1 79 0
 21203 0104 40F20003 		movw	r3, #:lower16:.LANCHOR2
 21204 0108 C0F20003 		movt	r3, #:upper16:.LANCHOR2
 21205 010c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 21206 010e 03F1FF33 		add	r3, r3, #-1
 21207 0112 9E42     		cmp	r6, r3
 21208 0114 70D1     		bne	.L13
 21209              		.loc 1 80 0
 21210 0116 40F20003 		movw	r3, #:lower16:.LANCHOR0
 21211 011a C0F20003 		movt	r3, #:upper16:.LANCHOR0
 21212 011e 4FF00002 		mov	r2, #0
 21213 0122 1A70     		strb	r2, [r3, #0]
 21214 0124 68E0     		b	.L13
 21215              	.L12:
 21216              		.loc 1 85 0
 21217 0126 5046     		mov	r0, sl
 21218 0128 9DF96F10 		ldrsb	r1, [sp, #111]
 21219 012c 9DF96E20 		ldrsb	r2, [sp, #110]
 21220 0130 FFF7FEFF 		bl	min_printf
 21221              		.loc 1 89 0
 21222 0134 09EBC500 		add	r0, r9, r5, lsl #3
 21223 0138 4FF00002 		mov	r2, #0
 21224 013c 0346     		mov	r3, r0
 21225 013e 03F8012B 		strb	r2, [r3], #1
 21226 0142 03F8012B 		strb	r2, [r3], #1
 21227 0146 03F8012B 		strb	r2, [r3], #1
 21228 014a 03F8012B 		strb	r2, [r3], #1
 21229 014e 03F8012B 		strb	r2, [r3], #1
 21230 0152 03F8012B 		strb	r2, [r3], #1
 21231 0156 03F8012B 		strb	r2, [r3], #1
 21232 015a 1A70     		strb	r2, [r3, #0]
 21233              		.loc 1 90 0
 21234 015c 5946     		mov	r1, fp
 21235 015e 9DF96F20 		ldrsb	r2, [sp, #111]
 21236 0162 9DF96E30 		ldrsb	r3, [sp, #110]
 21237 0166 FFF7FEFF 		bl	sprintf
 21238              		.loc 1 98 0
 21239 016a 0DA8     		add	r0, sp, #52
 21240 016c 0599     		ldr	r1, [sp, #20]
 21241 016e 4FF01302 		mov	r2, #19
 21242 0172 FFF7FEFF 		bl	f_open
 21243 0176 0028     		cmp	r0, #0
 21244 0178 3BD1     		bne	.L14
 21245              		.loc 1 101 0
 21246 017a 0DA8     		add	r0, sp, #52
 21247 017c 1099     		ldr	r1, [sp, #64]
 21248 017e FFF7FEFF 		bl	f_lseek
 21249              		.loc 1 104 0
 21250 0182 069A     		ldr	r2, [sp, #24]
 21251 0184 1378     		ldrb	r3, [r2, #0]	@ zero_extendqisi2
 21252 0186 012B     		cmp	r3, #1
 21253 0188 12D1     		bne	.L15
 21254              		.loc 1 106 0
 21255 018a 0DAD     		add	r5, sp, #52
 21256 018c 2846     		mov	r0, r5
 21257 018e 0999     		ldr	r1, [sp, #36]
 21258 0190 4FF00C02 		mov	r2, #12
 21259 0194 1AAB     		add	r3, sp, #104
 21260 0196 FFF7FEFF 		bl	f_write
 21261              		.loc 1 107 0
 21262 019a 2846     		mov	r0, r5
 21263 019c FFF7FEFF 		bl	f_sync
 21264              		.loc 1 108 0
 21265 01a0 2846     		mov	r0, r5
 21266 01a2 1099     		ldr	r1, [sp, #64]
 21267 01a4 FFF7FEFF 		bl	f_lseek
 21268              		.loc 1 109 0
 21269 01a8 4FF00003 		mov	r3, #0
 21270 01ac 069A     		ldr	r2, [sp, #24]
 21271 01ae 1370     		strb	r3, [r2, #0]
 21272              	.L15:
 21273              		.loc 1 113 0
 21274 01b0 0BA8     		add	r0, sp, #44
 21275 01b2 FFF7FEFF 		bl	RTCgetTime
 21276              		.loc 1 115 0
 21277 01b6 16AF     		add	r7, sp, #88
 21278 01b8 9DF83020 		ldrb	r2, [sp, #48]	@ zero_extendqisi2
 21279 01bc 9DF83130 		ldrb	r3, [sp, #49]	@ zero_extendqisi2
 21280 01c0 0096     		str	r6, [sp, #0]
 21281 01c2 9DF96F10 		ldrsb	r1, [sp, #111]
 21282              	.LVL3:
 21283 01c6 0191     		str	r1, [sp, #4]
 21284 01c8 9DF96E10 		ldrsb	r1, [sp, #110]
 21285              	.LVL4:
 21286 01cc 0291     		str	r1, [sp, #8]
 21287 01ce 3846     		mov	r0, r7
 21288 01d0 0899     		ldr	r1, [sp, #32]
 21289              	.LVL5:
 21290 01d2 FFF7FEFF 		bl	sprintf
 21291              		.loc 1 116 0
 21292 01d6 3846     		mov	r0, r7
 21293 01d8 FFF7FEFF 		bl	strlen
 21294 01dc 0246     		mov	r2, r0
 21295 01de 0DAD     		add	r5, sp, #52
 21296 01e0 2846     		mov	r0, r5
 21297 01e2 3946     		mov	r1, r7
 21298 01e4 1AAB     		add	r3, sp, #104
 21299 01e6 FFF7FEFF 		bl	f_write
 21300              		.loc 1 118 0
 21301 01ea 2846     		mov	r0, r5
 21302 01ec FFF7FEFF 		bl	f_close
 21303 01f0 02E0     		b	.L13
 21304              	.LVL6:
 21305              	.L14:
 21306              		.loc 1 123 0
 21307 01f2 0798     		ldr	r0, [sp, #28]
 21308 01f4 FFF7FEFF 		bl	min_printf
 21309              	.L13:
 21310              		.loc 1 65 0
 21311 01f8 04F10104 		add	r4, r4, #1
 21312              	.LVL7:
 21313 01fc E4B2     		uxtb	r4, r4
 21314              	.LVL8:
 21315 01fe 66B2     		sxtb	r6, r4
 21316 0200 40F20003 		movw	r3, #:lower16:.LANCHOR2
 21317 0204 C0F20003 		movt	r3, #:upper16:.LANCHOR2
 21318 0208 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 21319 020a 9E42     		cmp	r6, r3
 21320 020c FFF665AF 		blt	.L16
 21321              	.L11:
 124:../1wire/temp_read.c **** #endif
 125:../1wire/temp_read.c **** 				}
 126:../1wire/temp_read.c **** 
 127:../1wire/temp_read.c **** #endif
 128:../1wire/temp_read.c **** 				// ---------------- KONIEC ZAPISU NA KARTE SD --------------------------- //
 129:../1wire/temp_read.c **** 				
 130:../1wire/temp_read.c **** 			}
 131:../1wire/temp_read.c **** 
 132:../1wire/temp_read.c **** 			// temperatura odczytana, wyzeruj stan
 133:../1wire/temp_read.c **** 			stan_odczytywania_temp = IDLE;
 21322              		.loc 1 133 0
 21323 0210 40F20003 		movw	r3, #:lower16:.LANCHOR0
 21324 0214 C0F20003 		movt	r3, #:upper16:.LANCHOR0
 21325 0218 4FF00002 		mov	r2, #0
 21326 021c 1A70     		strb	r2, [r3, #0]
 21327              	.L17:
 134:../1wire/temp_read.c **** 		}
 135:../1wire/temp_read.c **** }
 21328              		.loc 1 135 0
 21329 021e 1DB0     		add	sp, sp, #116
 21330 0220 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 21331              		.cfi_endproc
 21332              	.LFE32:
 21334              		.comm	temperatura,16,4
 21335              		.section	.bss.next_day,"aw",%nobits
 21336              		.set	.LANCHOR1,. + 0
 21339              	next_day:
 21340 0000 00       		.space	1
 21341              		.section	.bss.stan_odczytywania_temp,"aw",%nobits
 21342              		.set	.LANCHOR0,. + 0
 21345              	stan_odczytywania_temp:
 21346 0000 00       		.space	1
 21347              		.section	.rodata.str1.4,"aMS",%progbits,1
 21348              		.align	2
 21349              	.LC0:
 21350 0000 5A612064 		.ascii	"Za duzo czujnikow!\015\012\000"
 21350      757A6F20 
 21350      637A756A 
 21350      6E696B6F 
 21350      77210D0A 
 21351 0015 000000   		.space	3
 21352              	.LC1:
 21353 0018 426C6164 		.ascii	"Blad crc\015\012\000"
 21353      20637263 
 21353      0D0A00
 21354 0023 00       		.space	1
 21355              	.LC2:
 21356 0024 25642E25 		.ascii	"%d.%d\015\012\000"
 21356      640D0A00 
 21357              	.LC3:
 21358 002c 0D0A2564 		.ascii	"\015\012%d.%d\000"
 21358      2E256400 
 21359              	.LC4:
 21360 0034 2F74656D 		.ascii	"/temp.txt\000"
 21360      702E7478 
 21360      7400
 21361 003e 0000     		.space	2
 21362              	.LC5:
 21363 0040 2D2D2D2D 		.ascii	"----------\015\012\000"
 21363      2D2D2D2D 
 21363      2D2D0D0A 
 21363      00
 21364 004d 000000   		.space	3
 21365              	.LC6:
 21366 0050 25643A25 		.ascii	"%d:%d [%d] : %d.%d\015\012\000"
 21366      64205B25 
 21366      645D203A 
 21366      2025642E 
 21366      25640D0A 
 21367 0065 000000   		.space	3
 21368              	.LC7:
 21369 0068 426C6164 		.ascii	"Blad zapisu temperatury\015\012\000"
 21369      207A6170 
 21369      69737520 
 21369      74656D70 
 21369      65726174 
 21370 0082 0000     		.section	.bss.liczba_czujnikow_temperatury,"aw",%nobits
 21371              		.set	.LANCHOR2,. + 0
 21374              	liczba_czujnikow_temperatury:
 21375 0000 00       		.space	1
 21376              		.text
 21377              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 temp_read.c
C:\Users\user\AppData\Local\Temp\ccrbmODh.s:21006  .text.ustawStanOdczytywaniaTemperatury:00000000 $t
C:\Users\user\AppData\Local\Temp\ccrbmODh.s:21011  .text.ustawStanOdczytywaniaTemperatury:00000000 ustawStanOdczytywaniaTemperatury
C:\Users\user\AppData\Local\Temp\ccrbmODh.s:21342  .bss.stan_odczytywania_temp:00000000 .LANCHOR0
C:\Users\user\AppData\Local\Temp\ccrbmODh.s:21029  .text.zamknijDzienLogowaniaTemperatury:00000000 $t
C:\Users\user\AppData\Local\Temp\ccrbmODh.s:21034  .text.zamknijDzienLogowaniaTemperatury:00000000 zamknijDzienLogowaniaTemperatury
C:\Users\user\AppData\Local\Temp\ccrbmODh.s:21336  .bss.next_day:00000000 .LANCHOR1
C:\Users\user\AppData\Local\Temp\ccrbmODh.s:21052  .text.odczytajStanOdczytywaniaTemperatury:00000000 $t
C:\Users\user\AppData\Local\Temp\ccrbmODh.s:21057  .text.odczytajStanOdczytywaniaTemperatury:00000000 odczytajStanOdczytywaniaTemperatury
C:\Users\user\AppData\Local\Temp\ccrbmODh.s:21074  .text.TempCheck:00000000 $t
C:\Users\user\AppData\Local\Temp\ccrbmODh.s:21079  .text.TempCheck:00000000 TempCheck
C:\Users\user\AppData\Local\Temp\ccrbmODh.s:21371  .bss.liczba_czujnikow_temperatury:00000000 .LANCHOR2
C:\Users\user\AppData\Local\Temp\ccrbmODh.s:21349  .rodata.str1.4:00000000 .LC0
C:\Users\user\AppData\Local\Temp\ccrbmODh.s:21355  .rodata.str1.4:00000024 .LC2
                            *COM*:00000010 temperatura
C:\Users\user\AppData\Local\Temp\ccrbmODh.s:21357  .rodata.str1.4:0000002c .LC3
C:\Users\user\AppData\Local\Temp\ccrbmODh.s:21359  .rodata.str1.4:00000034 .LC4
C:\Users\user\AppData\Local\Temp\ccrbmODh.s:21368  .rodata.str1.4:00000068 .LC7
C:\Users\user\AppData\Local\Temp\ccrbmODh.s:21365  .rodata.str1.4:00000050 .LC6
C:\Users\user\AppData\Local\Temp\ccrbmODh.s:21362  .rodata.str1.4:00000040 .LC5
C:\Users\user\AppData\Local\Temp\ccrbmODh.s:21352  .rodata.str1.4:00000018 .LC1
C:\Users\user\AppData\Local\Temp\ccrbmODh.s:21339  .bss.next_day:00000000 next_day
C:\Users\user\AppData\Local\Temp\ccrbmODh.s:21340  .bss.next_day:00000000 $d
C:\Users\user\AppData\Local\Temp\ccrbmODh.s:21345  .bss.stan_odczytywania_temp:00000000 stan_odczytywania_temp
C:\Users\user\AppData\Local\Temp\ccrbmODh.s:21346  .bss.stan_odczytywania_temp:00000000 $d
C:\Users\user\AppData\Local\Temp\ccrbmODh.s:21348  .rodata.str1.4:00000000 $d
C:\Users\user\AppData\Local\Temp\ccrbmODh.s:21374  .bss.liczba_czujnikow_temperatury:00000000 liczba_czujnikow_temperatury
C:\Users\user\AppData\Local\Temp\ccrbmODh.s:21375  .bss.liczba_czujnikow_temperatury:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
search_sensors
usart_printf
ow_reset
ow_write_byte
gSensorIDs
ow_command
read_temp
min_printf
sprintf
f_open
f_lseek
f_write
f_sync
RTCgetTime
strlen
f_close
