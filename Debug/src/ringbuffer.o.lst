   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"ringbuffer.c"
  23              	.Ltext0:
  24              		.file 1 "../src/ringbuffer.c"
 1209              		.align	2
 1210              		.global	ring_buffer_push
 1211              		.thumb
 1212              		.thumb_func
 1214              	ring_buffer_push:
 1215              	.LFB0:
   1:../src/ringbuffer.c **** #include "ringbuffer.h"
   2:../src/ringbuffer.c **** 
   3:../src/ringbuffer.c **** uint8_t buffer[BUFF_SIZE], is_full = 0;
   4:../src/ringbuffer.c **** uint8_t start = 0, end = 0, buff_count = 0;
   5:../src/ringbuffer.c **** 
   6:../src/ringbuffer.c **** void ring_buffer_push(uint8_t dane) {
 1216              		.loc 1 6 0
 1217              		.cfi_startproc
 1218              		@ args = 0, pretend = 0, frame = 0
 1219              		@ frame_needed = 0, uses_anonymous_args = 0
 1220              		@ link register save eliminated.
 1221              	.LVL0:
 1222 0000 10B4     		push	{r4}
 1223              	.LCFI0:
 1224              		.cfi_def_cfa_offset 4
   7:../src/ringbuffer.c **** 
   8:../src/ringbuffer.c **** 	if (buff_count == BUFF_SIZE)
 1225              		.loc 1 8 0
 1226 0002 40F20003 		movw	r3, #:lower16:.LANCHOR0
 1227 0006 C0F20003 		movt	r3, #:upper16:.LANCHOR0
 1228 000a 93F800C0 		ldrb	ip, [r3, #0]	@ zero_extendqisi2
 1229 000e BCF1500F 		cmp	ip, #80
 1230 0012 35D0     		beq	.L6
 1231              		.cfi_offset 4, -4
   9:../src/ringbuffer.c **** 		return;
  10:../src/ringbuffer.c **** 	
  11:../src/ringbuffer.c ****   // aby nie przekroczyc zakresu indeksow bufora
  12:../src/ringbuffer.c ****   end = (end+1) % BUFF_SIZE;
 1232              		.loc 1 12 0
 1233 0014 40F20003 		movw	r3, #:lower16:.LANCHOR1
 1234 0018 C0F20003 		movt	r3, #:upper16:.LANCHOR1
 1235 001c 1C78     		ldrb	r4, [r3, #0]	@ zero_extendqisi2
 1236 001e 04F10104 		add	r4, r4, #1
 1237 0022 46F26761 		movw	r1, #:lower16:1717986919
 1238 0026 C6F26661 		movt	r1, #:upper16:1717986919
 1239 002a 81FB0421 		smull	r2, r1, r1, r4
 1240 002e 4FEA6111 		asr	r1, r1, #5
 1241 0032 01EB8101 		add	r1, r1, r1, lsl #2
 1242 0036 A4EB0112 		sub	r2, r4, r1, lsl #4
 1243 003a D2B2     		uxtb	r2, r2
 1244 003c 1A70     		strb	r2, [r3, #0]
  13:../src/ringbuffer.c **** 
  14:../src/ringbuffer.c ****   if (start == end)
 1245              		.loc 1 14 0
 1246 003e 40F20003 		movw	r3, #:lower16:.LANCHOR2
 1247 0042 C0F20003 		movt	r3, #:upper16:.LANCHOR2
 1248 0046 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1249 0048 9342     		cmp	r3, r2
 1250 004a 0CD1     		bne	.L3
  15:../src/ringbuffer.c ****   {
  16:../src/ringbuffer.c ****     // jezeli najechaly nasiebie start i end to cofamy end do tylu w sensie kolowym
  17:../src/ringbuffer.c ****     end = (end!=0) ? (end-1):(BUFF_SIZE-1);
 1251              		.loc 1 17 0
 1252 004c 12B9     		cbnz	r2, .L4
 1253 004e 4FF04F02 		mov	r2, #79
 1254 0052 02E0     		b	.L5
 1255              	.L4:
 1256 0054 02F1FF32 		add	r2, r2, #-1
 1257 0058 D2B2     		uxtb	r2, r2
 1258              	.L5:
 1259 005a 40F20003 		movw	r3, #:lower16:.LANCHOR1
 1260 005e C0F20003 		movt	r3, #:upper16:.LANCHOR1
 1261 0062 1A70     		strb	r2, [r3, #0]
  18:../src/ringbuffer.c ****     return;
 1262              		.loc 1 18 0
 1263 0064 0CE0     		b	.L6
 1264              	.L3:
  19:../src/ringbuffer.c ****   }
  20:../src/ringbuffer.c ****     buffer[end] = dane;
 1265              		.loc 1 20 0
 1266 0066 40F20003 		movw	r3, #:lower16:buffer
 1267 006a C0F20003 		movt	r3, #:upper16:buffer
 1268 006e 9854     		strb	r0, [r3, r2]
  21:../src/ringbuffer.c ****     buff_count++;
 1269              		.loc 1 21 0
 1270 0070 40F20003 		movw	r3, #:lower16:.LANCHOR0
 1271 0074 C0F20003 		movt	r3, #:upper16:.LANCHOR0
 1272 0078 0CF1010C 		add	ip, ip, #1
 1273 007c 83F800C0 		strb	ip, [r3, #0]
 1274              	.L6:
  22:../src/ringbuffer.c **** }
 1275              		.loc 1 22 0
 1276 0080 10BC     		pop	{r4}
 1277 0082 7047     		bx	lr
 1278              		.cfi_endproc
 1279              	.LFE0:
 1281              		.section	.text.ring_buffer_pop,"ax",%progbits
 1282              		.align	2
 1283              		.global	ring_buffer_pop
 1284              		.thumb
 1285              		.thumb_func
 1287              	ring_buffer_pop:
 1288              	.LFB1:
  23:../src/ringbuffer.c **** 
  24:../src/ringbuffer.c **** uint8_t ring_buffer_pop(void) {
 1289              		.loc 1 24 0
 1290              		.cfi_startproc
 1291              		@ args = 0, pretend = 0, frame = 0
 1292              		@ frame_needed = 0, uses_anonymous_args = 0
 1293              		@ link register save eliminated.
  25:../src/ringbuffer.c ****   uint8_t temp=0;
  26:../src/ringbuffer.c **** 
  27:../src/ringbuffer.c ****   // wtedy bufer pusty
  28:../src/ringbuffer.c ****   if ( (start==end) | (buff_count ==0)) return 0;
 1294              		.loc 1 28 0
 1295 0000 40F20003 		movw	r3, #:lower16:.LANCHOR2
 1296 0004 C0F20003 		movt	r3, #:upper16:.LANCHOR2
 1297 0008 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 1298 000a 40F20003 		movw	r3, #:lower16:.LANCHOR0
 1299 000e C0F20003 		movt	r3, #:upper16:.LANCHOR0
 1300 0012 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1301 0014 40F20003 		movw	r3, #:lower16:.LANCHOR1
 1302 0018 C0F20003 		movt	r3, #:upper16:.LANCHOR1
 1303 001c 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 1304 001e D2F10103 		rsbs	r3, r2, #1
 1305 0022 38BF     		it	cc
 1306 0024 0023     		movcc	r3, #0
 1307 0026 8842     		cmp	r0, r1
 1308 0028 08BF     		it	eq
 1309 002a 43F00103 		orreq	r3, r3, #1
 1310 002e 13B1     		cbz	r3, .L8
 1311 0030 4FF00000 		mov	r0, #0
 1312              	.LVL1:
 1313 0034 7047     		bx	lr
 1314              	.LVL2:
 1315              	.L8:
  29:../src/ringbuffer.c **** 	
  30:../src/ringbuffer.c ****   start=(start+1) % BUFF_SIZE ;
 1316              		.loc 1 30 0
 1317 0036 01F10101 		add	r1, r1, #1
 1318 003a 46F26763 		movw	r3, #:lower16:1717986919
 1319 003e C6F26663 		movt	r3, #:upper16:1717986919
 1320 0042 83FB0103 		smull	r0, r3, r3, r1
 1321 0046 4FEA6313 		asr	r3, r3, #5
 1322 004a 03EB8303 		add	r3, r3, r3, lsl #2
 1323 004e A1EB0311 		sub	r1, r1, r3, lsl #4
 1324 0052 C9B2     		uxtb	r1, r1
 1325 0054 40F20003 		movw	r3, #:lower16:.LANCHOR2
 1326 0058 C0F20003 		movt	r3, #:upper16:.LANCHOR2
 1327 005c 1970     		strb	r1, [r3, #0]
  31:../src/ringbuffer.c ****   temp=buffer[start];
 1328              		.loc 1 31 0
 1329 005e 40F20003 		movw	r3, #:lower16:buffer
 1330 0062 C0F20003 		movt	r3, #:upper16:buffer
 1331 0066 585C     		ldrb	r0, [r3, r1]	@ zero_extendqisi2
 1332              	.LVL3:
  32:../src/ringbuffer.c ****   buffer[start]=0;
 1333              		.loc 1 32 0
 1334 0068 4FF0000C 		mov	ip, #0
 1335 006c 03F801C0 		strb	ip, [r3, r1]
  33:../src/ringbuffer.c ****   buff_count--;
 1336              		.loc 1 33 0
 1337 0070 40F20003 		movw	r3, #:lower16:.LANCHOR0
 1338 0074 C0F20003 		movt	r3, #:upper16:.LANCHOR0
 1339 0078 02F1FF32 		add	r2, r2, #-1
 1340 007c 1A70     		strb	r2, [r3, #0]
 1341              	.LVL4:
  34:../src/ringbuffer.c **** 
  35:../src/ringbuffer.c ****   return temp;
  36:../src/ringbuffer.c **** 
  37:../src/ringbuffer.c **** }
 1342              		.loc 1 37 0
 1343 007e 7047     		bx	lr
 1344              		.cfi_endproc
 1345              	.LFE1:
 1347              		.section	.text.buffer_count,"ax",%progbits
 1348              		.align	2
 1349              		.global	buffer_count
 1350              		.thumb
 1351              		.thumb_func
 1353              	buffer_count:
 1354              	.LFB2:
  38:../src/ringbuffer.c **** 
  39:../src/ringbuffer.c **** uint8_t buffer_count(void) {
 1355              		.loc 1 39 0
 1356              		.cfi_startproc
 1357              		@ args = 0, pretend = 0, frame = 0
 1358              		@ frame_needed = 0, uses_anonymous_args = 0
 1359              		@ link register save eliminated.
 1360              		.loc 1 39 0
 1361 0000 40F20003 		movw	r3, #:lower16:.LANCHOR0
 1362 0004 C0F20003 		movt	r3, #:upper16:.LANCHOR0
  40:../src/ringbuffer.c **** 
  41:../src/ringbuffer.c ****     return buff_count;
  42:../src/ringbuffer.c **** }
 1363              		.loc 1 42 0
 1364 0008 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 1365 000a 7047     		bx	lr
 1366              		.cfi_endproc
 1367              	.LFE2:
 1369              		.section	.text.is_empty,"ax",%progbits
 1370              		.align	2
 1371              		.global	is_empty
 1372              		.thumb
 1373              		.thumb_func
 1375              	is_empty:
 1376              	.LFB3:
  43:../src/ringbuffer.c **** 
  44:../src/ringbuffer.c **** uint8_t is_empty(void) {
 1377              		.loc 1 44 0
 1378              		.cfi_startproc
 1379              		@ args = 0, pretend = 0, frame = 0
 1380              		@ frame_needed = 0, uses_anonymous_args = 0
 1381              		@ link register save eliminated.
 1382              		.loc 1 44 0
 1383 0000 40F20002 		movw	r2, #:lower16:.LANCHOR2
 1384 0004 C0F20002 		movt	r2, #:upper16:.LANCHOR2
 1385 0008 40F20003 		movw	r3, #:lower16:.LANCHOR1
 1386 000c C0F20003 		movt	r3, #:upper16:.LANCHOR1
 1387 0010 1078     		ldrb	r0, [r2, #0]	@ zero_extendqisi2
 1388 0012 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
  45:../src/ringbuffer.c **** 
  46:../src/ringbuffer.c ****     if(start==end)
  47:../src/ringbuffer.c ****         return 1;
  48:../src/ringbuffer.c ****     else
  49:../src/ringbuffer.c ****         return 0;
  50:../src/ringbuffer.c **** }
 1389              		.loc 1 50 0
 1390 0014 9842     		cmp	r0, r3
 1391 0016 14BF     		ite	ne
 1392 0018 0020     		movne	r0, #0
 1393 001a 0120     		moveq	r0, #1
 1394 001c 7047     		bx	lr
 1395              		.cfi_endproc
 1396              	.LFE3:
 1398 001e 00BF     		.section	.text.decrement_end,"ax",%progbits
 1399              		.align	2
 1400              		.global	decrement_end
 1401              		.thumb
 1402              		.thumb_func
 1404              	decrement_end:
 1405              	.LFB4:
  51:../src/ringbuffer.c **** 
  52:../src/ringbuffer.c **** void decrement_end(void) {
 1406              		.loc 1 52 0
 1407              		.cfi_startproc
 1408              		@ args = 0, pretend = 0, frame = 0
 1409              		@ frame_needed = 0, uses_anonymous_args = 0
 1410              		@ link register save eliminated.
  53:../src/ringbuffer.c **** 
  54:../src/ringbuffer.c **** 	end = (end > 0) ?(end-1) : 0;
 1411              		.loc 1 54 0
 1412 0000 40F20003 		movw	r3, #:lower16:.LANCHOR1
 1413 0004 C0F20003 		movt	r3, #:upper16:.LANCHOR1
 1414 0008 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1415 000a 13B9     		cbnz	r3, .L16
 1416 000c 4FF00002 		mov	r2, #0
 1417 0010 02E0     		b	.L17
 1418              	.L16:
 1419 0012 03F1FF33 		add	r3, r3, #-1
 1420 0016 DAB2     		uxtb	r2, r3
 1421              	.L17:
 1422 0018 40F20003 		movw	r3, #:lower16:.LANCHOR1
 1423 001c C0F20003 		movt	r3, #:upper16:.LANCHOR1
 1424 0020 1A70     		strb	r2, [r3, #0]
  55:../src/ringbuffer.c **** }
 1425              		.loc 1 55 0
 1426 0022 7047     		bx	lr
 1427              		.cfi_endproc
 1428              	.LFE4:
 1430              		.section	.text.ring_buffer_init,"ax",%progbits
 1431              		.align	2
 1432              		.global	ring_buffer_init
 1433              		.thumb
 1434              		.thumb_func
 1436              	ring_buffer_init:
 1437              	.LFB5:
  56:../src/ringbuffer.c **** 
  57:../src/ringbuffer.c **** void ring_buffer_init(void) {
 1438              		.loc 1 57 0
 1439              		.cfi_startproc
 1440              		@ args = 0, pretend = 0, frame = 0
 1441              		@ frame_needed = 0, uses_anonymous_args = 0
 1442              		@ link register save eliminated.
 1443              		.loc 1 57 0
 1444 0000 4FF00003 		mov	r3, #0
  58:../src/ringbuffer.c **** 
  59:../src/ringbuffer.c ****     uint8_t i;
  60:../src/ringbuffer.c ****     for(i=0;i<BUFF_SIZE;i++)
  61:../src/ringbuffer.c ****         buffer[i]=0;
 1445              		.loc 1 61 0
 1446 0004 40F20002 		movw	r2, #:lower16:buffer
 1447 0008 C0F20002 		movt	r2, #:upper16:buffer
 1448 000c 1946     		mov	r1, r3
 1449              	.L20:
 1450 000e 03EB0200 		add	r0, r3, r2
 1451 0012 0170     		strb	r1, [r0, #0]
 1452 0014 03F10103 		add	r3, r3, #1
 1453              		.loc 1 60 0
 1454 0018 502B     		cmp	r3, #80
 1455 001a F8D1     		bne	.L20
  62:../src/ringbuffer.c **** 
  63:../src/ringbuffer.c **** }
 1456              		.loc 1 63 0
 1457 001c 7047     		bx	lr
 1458              		.cfi_endproc
 1459              	.LFE5:
 1461              		.global	is_full
 1462              		.global	start
 1463              		.global	end
 1464              		.global	buff_count
 1465              		.comm	buffer,80,4
 1466 001e 00BF     		.section	.bss.end,"aw",%nobits
 1467              		.set	.LANCHOR1,. + 0
 1470              	end:
 1471 0000 00       		.space	1
 1472              		.section	.bss.buff_count,"aw",%nobits
 1473              		.set	.LANCHOR0,. + 0
 1476              	buff_count:
 1477 0000 00       		.space	1
 1478              		.section	.bss.start,"aw",%nobits
 1479              		.set	.LANCHOR2,. + 0
 1482              	start:
 1483 0000 00       		.space	1
 1484              		.section	.bss.is_full,"aw",%nobits
 1487              	is_full:
 1488 0000 00       		.space	1
 1489              		.text
 1490              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 ringbuffer.c
C:\Users\user\AppData\Local\Temp\ccBEOnri.s:1209   .text.ring_buffer_push:00000000 $t
C:\Users\user\AppData\Local\Temp\ccBEOnri.s:1214   .text.ring_buffer_push:00000000 ring_buffer_push
C:\Users\user\AppData\Local\Temp\ccBEOnri.s:1473   .bss.buff_count:00000000 .LANCHOR0
C:\Users\user\AppData\Local\Temp\ccBEOnri.s:1467   .bss.end:00000000 .LANCHOR1
C:\Users\user\AppData\Local\Temp\ccBEOnri.s:1479   .bss.start:00000000 .LANCHOR2
                            *COM*:00000050 buffer
C:\Users\user\AppData\Local\Temp\ccBEOnri.s:1282   .text.ring_buffer_pop:00000000 $t
C:\Users\user\AppData\Local\Temp\ccBEOnri.s:1287   .text.ring_buffer_pop:00000000 ring_buffer_pop
C:\Users\user\AppData\Local\Temp\ccBEOnri.s:1348   .text.buffer_count:00000000 $t
C:\Users\user\AppData\Local\Temp\ccBEOnri.s:1353   .text.buffer_count:00000000 buffer_count
C:\Users\user\AppData\Local\Temp\ccBEOnri.s:1370   .text.is_empty:00000000 $t
C:\Users\user\AppData\Local\Temp\ccBEOnri.s:1375   .text.is_empty:00000000 is_empty
C:\Users\user\AppData\Local\Temp\ccBEOnri.s:1399   .text.decrement_end:00000000 $t
C:\Users\user\AppData\Local\Temp\ccBEOnri.s:1404   .text.decrement_end:00000000 decrement_end
C:\Users\user\AppData\Local\Temp\ccBEOnri.s:1431   .text.ring_buffer_init:00000000 $t
C:\Users\user\AppData\Local\Temp\ccBEOnri.s:1436   .text.ring_buffer_init:00000000 ring_buffer_init
C:\Users\user\AppData\Local\Temp\ccBEOnri.s:1487   .bss.is_full:00000000 is_full
C:\Users\user\AppData\Local\Temp\ccBEOnri.s:1482   .bss.start:00000000 start
C:\Users\user\AppData\Local\Temp\ccBEOnri.s:1470   .bss.end:00000000 end
C:\Users\user\AppData\Local\Temp\ccBEOnri.s:1476   .bss.buff_count:00000000 buff_count
C:\Users\user\AppData\Local\Temp\ccBEOnri.s:1471   .bss.end:00000000 $d
C:\Users\user\AppData\Local\Temp\ccBEOnri.s:1477   .bss.buff_count:00000000 $d
C:\Users\user\AppData\Local\Temp\ccBEOnri.s:1483   .bss.start:00000000 $d
C:\Users\user\AppData\Local\Temp\ccBEOnri.s:1488   .bss.is_full:00000000 $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
