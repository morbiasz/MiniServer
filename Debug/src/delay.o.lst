   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"delay.c"
  23              	.Ltext0:
  24              		.file 1 "../src/delay.c"
 18240              		.align	2
 18241              		.global	Delay_config
 18242              		.thumb
 18243              		.thumb_func
 18245              	Delay_config:
 18246              	.LFB29:
   1:../src/delay.c **** #include "delay.h"
   2:../src/delay.c **** #include <stm32f10x_tim.h>
   3:../src/delay.c **** 
   4:../src/delay.c **** 
   5:../src/delay.c **** 
   6:../src/delay.c **** static __IO uint32_t TimingDelay;
   7:../src/delay.c **** 
   8:../src/delay.c **** volatile uint32_t timerCounter = 0UL;
   9:../src/delay.c **** volatile uint32_t arptimer = 0UL;
  10:../src/delay.c **** 
  11:../src/delay.c **** #define SYS_CLK 24000000    /* 24 MHz */
  12:../src/delay.c **** #define DELAY_TIM_FREQUENCY 1000000 /* = 1MHZ -> timer runs in microseconds */
  13:../src/delay.c **** 
  14:../src/delay.c **** void Delay_config(void) {
 18247              		.loc 1 14 0
 18248              		.cfi_startproc
 18249              		@ args = 0, pretend = 0, frame = 0
 18250              		@ frame_needed = 0, uses_anonymous_args = 0
 18251              		@ link register save eliminated.
 18252              	.LBB8:
 18253              	.LBB9:
   1:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**************************************************************************//**
   2:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @file     core_cm3.h
   3:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief    CMSIS Cortex-M3 Core Peripheral Access Layer Header File
   4:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @version  V1.30
   5:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @date     30. October 2009
   6:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
   7:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @note
   8:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Copyright (C) 2009 ARM Limited. All rights reserved.
   9:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
  10:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @par
  11:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M 
  12:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * processor based microcontrollers.  This file can be freely distributed 
  13:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * within development tools that are supporting such ARM based processors. 
  14:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
  15:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @par
  16:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
  22:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  ******************************************************************************/
  23:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
  24:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #ifndef __CM3_CORE_H__
  25:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define __CM3_CORE_H__
  26:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
  27:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /** @addtogroup CMSIS_CM3_core_LintCinfiguration CMSIS CM3 Core Lint Configuration
  28:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
  29:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * List of Lint messages which will be suppressed and not shown:
  30:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *   - Error 10: \n
  31:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *     register uint32_t __regBasePri         __asm("basepri"); \n
  32:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *     Error 10: Expecting ';'
  33:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * .
  34:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *   - Error 530: \n
  35:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *     return(__regBasePri); \n
  36:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *     Warning 530: Symbol '__regBasePri' (line 264) not initialized
  37:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * . 
  38:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *   - Error 550: \n
  39:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *     __regBasePri = (basePri & 0x1ff); \n
  40:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *     Warning 550: Symbol '__regBasePri' (line 271) not accessed
  41:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * .
  42:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *   - Error 754: \n
  43:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *     uint32_t RESERVED0[24]; \n
  44:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *     Info 754: local structure member '<some, not used in the HAL>' (line 109, file ./cm3_core.h)
  45:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * .
  46:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *   - Error 750: \n
  47:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *     #define __CM3_CORE_H__ \n
  48:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *     Info 750: local macro '__CM3_CORE_H__' (line 43, file./cm3_core.h) not referenced
  49:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * .
  50:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *   - Error 528: \n
  51:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *     static __INLINE void NVIC_DisableIRQ(uint32_t IRQn) \n
  52:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *     Warning 528: Symbol 'NVIC_DisableIRQ(unsigned int)' (line 419, file ./cm3_core.h) not refere
  53:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * .
  54:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *   - Error 751: \n
  55:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *     } InterruptType_Type; \n
  56:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *     Info 751: local typedef 'InterruptType_Type' (line 170, file ./cm3_core.h) not referenced
  57:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * .
  58:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Note:  To re-enable a Message, insert a space before 'lint' *
  59:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
  60:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
  61:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
  62:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /*lint -save */
  63:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /*lint -e10  */
  64:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /*lint -e530 */
  65:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /*lint -e550 */
  66:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /*lint -e754 */
  67:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /*lint -e750 */
  68:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /*lint -e528 */
  69:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /*lint -e751 */
  70:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
  71:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
  72:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /** @addtogroup CMSIS_CM3_core_definitions CM3 Core Definitions
  73:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   This file defines all structures and symbols for CMSIS core:
  74:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****     - CMSIS version number
  75:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****     - Cortex-M core registers and bitfields
  76:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****     - Cortex-M core peripheral base address
  77:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   @{
  78:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
  79:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
  80:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #ifdef __cplusplus
  81:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  extern "C" {
  82:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #endif 
  83:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
  84:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define __CM3_CMSIS_VERSION_MAIN  (0x01)                                                       /*!<
  85:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define __CM3_CMSIS_VERSION_SUB   (0x30)                                                       /*!<
  86:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define __CM3_CMSIS_VERSION       ((__CM3_CMSIS_VERSION_MAIN << 16) | __CM3_CMSIS_VERSION_SUB) /*!<
  87:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
  88:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define __CORTEX_M                (0x03)                                                       /*!<
  89:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
  90:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #include <stdint.h>                           /* Include standard types */
  91:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
  92:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #if defined (__ICCARM__)
  93:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   #include <intrinsics.h>                     /* IAR Intrinsics   */
  94:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #endif
  95:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
  96:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
  97:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #ifndef __NVIC_PRIO_BITS
  98:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   #define __NVIC_PRIO_BITS    4               /*!< standard definition for NVIC Priority Bits */
  99:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #endif
 100:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 101:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 102:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 103:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 104:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
 105:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * IO definitions
 106:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 107:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * define access restrictions to peripheral registers
 108:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
 109:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 110:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #ifdef __cplusplus
 111:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   #define     __I     volatile                /*!< defines 'read only' permissions      */
 112:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #else
 113:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   #define     __I     volatile const          /*!< defines 'read only' permissions      */
 114:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #endif
 115:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define     __O     volatile                  /*!< defines 'write only' permissions     */
 116:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define     __IO    volatile                  /*!< defines 'read / write' permissions   */
 117:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 118:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 119:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 120:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /*******************************************************************************
 121:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *                 Register Abstraction
 122:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  ******************************************************************************/
 123:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /** @addtogroup CMSIS_CM3_core_register CMSIS CM3 Core Register
 124:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  @{
 125:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** */
 126:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 127:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 128:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /** @addtogroup CMSIS_CM3_NVIC CMSIS CM3 NVIC
 129:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   memory mapped structure for Nested Vectored Interrupt Controller (NVIC)
 130:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   @{
 131:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
 132:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** typedef struct
 133:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** {
 134:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t ISER[8];                      /*!< Offset: 0x000  Interrupt Set Enable Register    
 135:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****        uint32_t RESERVED0[24];                                   
 136:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t ICER[8];                      /*!< Offset: 0x080  Interrupt Clear Enable Register  
 137:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****        uint32_t RSERVED1[24];                                    
 138:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t ISPR[8];                      /*!< Offset: 0x100  Interrupt Set Pending Register   
 139:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****        uint32_t RESERVED2[24];                                   
 140:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t ICPR[8];                      /*!< Offset: 0x180  Interrupt Clear Pending Register 
 141:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****        uint32_t RESERVED3[24];                                   
 142:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t IABR[8];                      /*!< Offset: 0x200  Interrupt Active bit Register    
 143:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****        uint32_t RESERVED4[56];                                   
 144:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint8_t  IP[240];                      /*!< Offset: 0x300  Interrupt Priority Register (8Bit
 145:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****        uint32_t RESERVED5[644];                                  
 146:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __O  uint32_t STIR;                         /*!< Offset: 0xE00  Software Trigger Interrupt Regist
 147:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** }  NVIC_Type;                                               
 148:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_NVIC */
 149:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 150:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 151:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /** @addtogroup CMSIS_CM3_SCB CMSIS CM3 SCB
 152:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   memory mapped structure for System Control Block (SCB)
 153:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   @{
 154:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
 155:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** typedef struct
 156:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** {
 157:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __I  uint32_t CPUID;                        /*!< Offset: 0x00  CPU ID Base Register              
 158:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t ICSR;                         /*!< Offset: 0x04  Interrupt Control State Register  
 159:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t VTOR;                         /*!< Offset: 0x08  Vector Table Offset Register      
 160:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t AIRCR;                        /*!< Offset: 0x0C  Application Interrupt / Reset Cont
 161:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t SCR;                          /*!< Offset: 0x10  System Control Register           
 162:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t CCR;                          /*!< Offset: 0x14  Configuration Control Register    
 163:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint8_t  SHP[12];                      /*!< Offset: 0x18  System Handlers Priority Registers
 164:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t SHCSR;                        /*!< Offset: 0x24  System Handler Control and State R
 165:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t CFSR;                         /*!< Offset: 0x28  Configurable Fault Status Register
 166:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t HFSR;                         /*!< Offset: 0x2C  Hard Fault Status Register        
 167:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t DFSR;                         /*!< Offset: 0x30  Debug Fault Status Register       
 168:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t MMFAR;                        /*!< Offset: 0x34  Mem Manage Address Register       
 169:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t BFAR;                         /*!< Offset: 0x38  Bus Fault Address Register        
 170:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t AFSR;                         /*!< Offset: 0x3C  Auxiliary Fault Status Register   
 171:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __I  uint32_t PFR[2];                       /*!< Offset: 0x40  Processor Feature Register        
 172:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __I  uint32_t DFR;                          /*!< Offset: 0x48  Debug Feature Register            
 173:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __I  uint32_t ADR;                          /*!< Offset: 0x4C  Auxiliary Feature Register        
 174:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __I  uint32_t MMFR[4];                      /*!< Offset: 0x50  Memory Model Feature Register     
 175:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __I  uint32_t ISAR[5];                      /*!< Offset: 0x60  ISA Feature Register              
 176:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** } SCB_Type;                                                
 177:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 178:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* SCB CPUID Register Definitions */
 179:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 180:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFul << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 181:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 182:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 183:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_CPUID_VARIANT_Msk              (0xFul << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 184:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 185:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 186:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFul << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 187:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 188:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 189:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_CPUID_REVISION_Msk             (0xFul << SCB_CPUID_REVISION_Pos)              /*!< SCB 
 190:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 191:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 192:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 193:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1ul << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 194:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 195:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 196:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_ICSR_PENDSVSET_Msk             (1ul << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 197:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 198:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 199:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1ul << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 200:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 201:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 202:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_ICSR_PENDSTSET_Msk             (1ul << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 203:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 204:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 205:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1ul << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 206:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 207:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 208:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1ul << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 209:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 210:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 211:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_ICSR_ISRPENDING_Msk            (1ul << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 212:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 213:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 214:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFul << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 215:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 216:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 217:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_ICSR_RETTOBASE_Msk             (1ul << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 218:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 219:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 220:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFul << SCB_ICSR_VECTACTIVE_Pos)           /*!< SCB 
 221:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 222:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 223:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_VTOR_TBLBASE_Pos               29                                             /*!< SCB 
 224:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_VTOR_TBLBASE_Msk               (0x1FFul << SCB_VTOR_TBLBASE_Pos)              /*!< SCB 
 225:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 226:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 227:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x3FFFFFul << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 228:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 229:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 230:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 231:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFul << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 232:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 233:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 234:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFul << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 235:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 236:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 237:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1ul << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 238:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 239:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 240:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7ul << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 241:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 242:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 243:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1ul << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 244:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 245:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 246:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1ul << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 247:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 248:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 249:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_AIRCR_VECTRESET_Msk            (1ul << SCB_AIRCR_VECTRESET_Pos)               /*!< SCB 
 250:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 251:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* SCB System Control Register Definitions */
 252:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 253:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SCR_SEVONPEND_Msk              (1ul << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 254:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 255:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 256:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1ul << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 257:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 258:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 259:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1ul << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 260:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 261:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* SCB Configuration Control Register Definitions */
 262:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 263:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_CCR_STKALIGN_Msk               (1ul << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 264:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 265:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 266:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1ul << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 267:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 268:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 269:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1ul << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 270:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 271:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 272:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1ul << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 273:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 274:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 275:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_CCR_USERSETMPEND_Msk           (1ul << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 276:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 277:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 278:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1ul << SCB_CCR_NONBASETHRDENA_Pos)            /*!< SCB 
 279:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 280:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* SCB System Handler Control and State Register Definitions */
 281:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
 282:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1ul << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 283:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 284:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 285:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1ul << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 286:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 287:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 288:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1ul << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 289:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 290:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 291:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1ul << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 292:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 293:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 294:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1ul << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 295:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 296:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 297:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1ul << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 298:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 299:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 300:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1ul << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 301:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 302:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 303:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1ul << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 304:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 305:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 306:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1ul << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 307:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 308:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 309:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SHCSR_MONITORACT_Msk           (1ul << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 310:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 311:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 312:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1ul << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 313:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****                                      
 314:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 315:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1ul << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 316:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 317:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
 318:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1ul << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 319:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 320:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 321:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1ul << SCB_SHCSR_MEMFAULTACT_Pos)             /*!< SCB 
 322:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 323:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* SCB Configurable Fault Status Registers Definitions */
 324:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 325:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFul << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 326:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 327:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 328:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFul << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 329:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 330:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 331:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFul << SCB_CFSR_MEMFAULTSR_Pos)            /*!< SCB 
 332:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 333:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* SCB Hard Fault Status Registers Definitions */
 334:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 335:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1ul << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 336:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 337:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 338:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_HFSR_FORCED_Msk                (1ul << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 339:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 340:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 341:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_HFSR_VECTTBL_Msk               (1ul << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 342:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 343:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* SCB Debug Fault Status Register Definitions */
 344:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 345:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_DFSR_EXTERNAL_Msk              (1ul << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 346:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 347:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 348:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_DFSR_VCATCH_Msk                (1ul << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 349:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 350:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 351:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_DFSR_DWTTRAP_Msk               (1ul << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 352:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 353:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 354:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_DFSR_BKPT_Msk                  (1ul << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 355:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 356:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 357:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_DFSR_HALTED_Msk                (1ul << SCB_DFSR_HALTED_Pos)                   /*!< SCB 
 358:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SCB */
 359:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 360:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 361:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /** @addtogroup CMSIS_CM3_SysTick CMSIS CM3 SysTick
 362:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   memory mapped structure for SysTick
 363:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   @{
 364:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
 365:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** typedef struct
 366:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** {
 367:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x00  SysTick Control and Status Registe
 368:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t LOAD;                         /*!< Offset: 0x04  SysTick Reload Value Register     
 369:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t VAL;                          /*!< Offset: 0x08  SysTick Current Value Register    
 370:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __I  uint32_t CALIB;                        /*!< Offset: 0x0C  SysTick Calibration Register      
 371:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** } SysTick_Type;
 372:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 373:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* SysTick Control / Status Register Definitions */
 374:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
 375:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1ul << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 376:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 377:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 378:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1ul << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 379:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 380:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 381:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SysTick_CTRL_TICKINT_Msk           (1ul << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 382:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 383:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 384:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SysTick_CTRL_ENABLE_Msk            (1ul << SysTick_CTRL_ENABLE_Pos)               /*!< SysT
 385:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 386:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* SysTick Reload Register Definitions */
 387:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 388:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFul << SysTick_LOAD_RELOAD_Pos)        /*!< SysT
 389:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 390:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* SysTick Current Register Definitions */
 391:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 392:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 393:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 394:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* SysTick Calibration Register Definitions */
 395:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 396:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SysTick_CALIB_NOREF_Msk            (1ul << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 397:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 398:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 399:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SysTick_CALIB_SKEW_Msk             (1ul << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 400:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 401:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 402:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 403:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SysTick */
 404:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 405:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 406:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /** @addtogroup CMSIS_CM3_ITM CMSIS CM3 ITM
 407:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   memory mapped structure for Instrumentation Trace Macrocell (ITM)
 408:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   @{
 409:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
 410:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** typedef struct
 411:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** {
 412:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __O  union  
 413:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   {
 414:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****     __O  uint8_t    u8;                       /*!< Offset:       ITM Stimulus Port 8-bit           
 415:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****     __O  uint16_t   u16;                      /*!< Offset:       ITM Stimulus Port 16-bit          
 416:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****     __O  uint32_t   u32;                      /*!< Offset:       ITM Stimulus Port 32-bit          
 417:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   }  PORT [32];                               /*!< Offset: 0x00  ITM Stimulus Port Registers       
 418:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****        uint32_t RESERVED0[864];                                 
 419:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t TER;                          /*!< Offset:       ITM Trace Enable Register         
 420:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****        uint32_t RESERVED1[15];                                  
 421:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t TPR;                          /*!< Offset:       ITM Trace Privilege Register      
 422:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****        uint32_t RESERVED2[15];                                  
 423:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t TCR;                          /*!< Offset:       ITM Trace Control Register        
 424:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****        uint32_t RESERVED3[29];                                  
 425:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t IWR;                          /*!< Offset:       ITM Integration Write Register    
 426:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t IRR;                          /*!< Offset:       ITM Integration Read Register     
 427:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t IMCR;                         /*!< Offset:       ITM Integration Mode Control Regis
 428:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****        uint32_t RESERVED4[43];                                  
 429:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t LAR;                          /*!< Offset:       ITM Lock Access Register          
 430:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t LSR;                          /*!< Offset:       ITM Lock Status Register          
 431:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****        uint32_t RESERVED5[6];                                   
 432:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __I  uint32_t PID4;                         /*!< Offset:       ITM Peripheral Identification Regi
 433:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __I  uint32_t PID5;                         /*!< Offset:       ITM Peripheral Identification Regi
 434:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __I  uint32_t PID6;                         /*!< Offset:       ITM Peripheral Identification Regi
 435:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __I  uint32_t PID7;                         /*!< Offset:       ITM Peripheral Identification Regi
 436:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __I  uint32_t PID0;                         /*!< Offset:       ITM Peripheral Identification Regi
 437:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __I  uint32_t PID1;                         /*!< Offset:       ITM Peripheral Identification Regi
 438:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __I  uint32_t PID2;                         /*!< Offset:       ITM Peripheral Identification Regi
 439:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __I  uint32_t PID3;                         /*!< Offset:       ITM Peripheral Identification Regi
 440:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __I  uint32_t CID0;                         /*!< Offset:       ITM Component  Identification Regi
 441:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __I  uint32_t CID1;                         /*!< Offset:       ITM Component  Identification Regi
 442:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __I  uint32_t CID2;                         /*!< Offset:       ITM Component  Identification Regi
 443:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __I  uint32_t CID3;                         /*!< Offset:       ITM Component  Identification Regi
 444:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** } ITM_Type;                                                
 445:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 446:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* ITM Trace Privilege Register Definitions */
 447:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define ITM_TPR_PRIVMASK_Pos                0                                             /*!< ITM 
 448:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFul << ITM_TPR_PRIVMASK_Pos)                /*!< ITM 
 449:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 450:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* ITM Trace Control Register Definitions */
 451:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define ITM_TCR_BUSY_Pos                   23                                             /*!< ITM 
 452:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define ITM_TCR_BUSY_Msk                   (1ul << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 453:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 454:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define ITM_TCR_ATBID_Pos                  16                                             /*!< ITM 
 455:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define ITM_TCR_ATBID_Msk                  (0x7Ful << ITM_TCR_ATBID_Pos)                  /*!< ITM 
 456:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 457:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define ITM_TCR_TSPrescale_Pos              8                                             /*!< ITM 
 458:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define ITM_TCR_TSPrescale_Msk             (3ul << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 459:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 460:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define ITM_TCR_SWOENA_Pos                  4                                             /*!< ITM 
 461:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define ITM_TCR_SWOENA_Msk                 (1ul << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 462:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 463:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define ITM_TCR_DWTENA_Pos                  3                                             /*!< ITM 
 464:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define ITM_TCR_DWTENA_Msk                 (1ul << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 465:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 466:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define ITM_TCR_SYNCENA_Pos                 2                                             /*!< ITM 
 467:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define ITM_TCR_SYNCENA_Msk                (1ul << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 468:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 469:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define ITM_TCR_TSENA_Pos                   1                                             /*!< ITM 
 470:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define ITM_TCR_TSENA_Msk                  (1ul << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 471:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 472:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define ITM_TCR_ITMENA_Pos                  0                                             /*!< ITM 
 473:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define ITM_TCR_ITMENA_Msk                 (1ul << ITM_TCR_ITMENA_Pos)                    /*!< ITM 
 474:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 475:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* ITM Integration Write Register Definitions */
 476:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define ITM_IWR_ATVALIDM_Pos                0                                             /*!< ITM 
 477:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define ITM_IWR_ATVALIDM_Msk               (1ul << ITM_IWR_ATVALIDM_Pos)                  /*!< ITM 
 478:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 479:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* ITM Integration Read Register Definitions */
 480:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define ITM_IRR_ATREADYM_Pos                0                                             /*!< ITM 
 481:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define ITM_IRR_ATREADYM_Msk               (1ul << ITM_IRR_ATREADYM_Pos)                  /*!< ITM 
 482:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 483:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* ITM Integration Mode Control Register Definitions */
 484:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define ITM_IMCR_INTEGRATION_Pos            0                                             /*!< ITM 
 485:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define ITM_IMCR_INTEGRATION_Msk           (1ul << ITM_IMCR_INTEGRATION_Pos)              /*!< ITM 
 486:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 487:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* ITM Lock Status Register Definitions */
 488:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define ITM_LSR_ByteAcc_Pos                 2                                             /*!< ITM 
 489:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define ITM_LSR_ByteAcc_Msk                (1ul << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 490:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 491:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define ITM_LSR_Access_Pos                  1                                             /*!< ITM 
 492:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define ITM_LSR_Access_Msk                 (1ul << ITM_LSR_Access_Pos)                    /*!< ITM 
 493:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 494:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define ITM_LSR_Present_Pos                 0                                             /*!< ITM 
 495:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define ITM_LSR_Present_Msk                (1ul << ITM_LSR_Present_Pos)                   /*!< ITM 
 496:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_ITM */
 497:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 498:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 499:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /** @addtogroup CMSIS_CM3_InterruptType CMSIS CM3 Interrupt Type
 500:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   memory mapped structure for Interrupt Type
 501:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   @{
 502:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
 503:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** typedef struct
 504:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** {
 505:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****        uint32_t RESERVED0;
 506:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __I  uint32_t ICTR;                         /*!< Offset: 0x04  Interrupt Control Type Register */
 507:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #if ((defined __CM3_REV) && (__CM3_REV >= 0x200))
 508:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t ACTLR;                        /*!< Offset: 0x08  Auxiliary Control Register      */
 509:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #else
 510:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****        uint32_t RESERVED1;
 511:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #endif
 512:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** } InterruptType_Type;
 513:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 514:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* Interrupt Controller Type Register Definitions */
 515:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Pos  0                                             /*!< Inte
 516:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Msk (0x1Ful << InterruptType_ICTR_INTLINESNUM_Pos) /*!< Inte
 517:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 518:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* Auxiliary Control Register Definitions */
 519:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Pos     2                                             /*!< Inte
 520:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Msk    (1ul << InterruptType_ACTLR_DISFOLD_Pos)       /*!< Inte
 521:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 522:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Pos  1                                             /*!< Inte
 523:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Msk (1ul << InterruptType_ACTLR_DISDEFWBUF_Pos)    /*!< Inte
 524:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 525:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Pos  0                                             /*!< Inte
 526:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Msk (1ul << InterruptType_ACTLR_DISMCYCINT_Pos)    /*!< Inte
 527:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_InterruptType */
 528:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 529:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 530:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 531:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /** @addtogroup CMSIS_CM3_MPU CMSIS CM3 MPU
 532:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   memory mapped structure for Memory Protection Unit (MPU)
 533:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   @{
 534:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
 535:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** typedef struct
 536:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** {
 537:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __I  uint32_t TYPE;                         /*!< Offset: 0x00  MPU Type Register                 
 538:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x04  MPU Control Register              
 539:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t RNR;                          /*!< Offset: 0x08  MPU Region RNRber Register        
 540:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t RBAR;                         /*!< Offset: 0x0C  MPU Region Base Address Register  
 541:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t RASR;                         /*!< Offset: 0x10  MPU Region Attribute and Size Regi
 542:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t RBAR_A1;                      /*!< Offset: 0x14  MPU Alias 1 Region Base Address Re
 543:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t RASR_A1;                      /*!< Offset: 0x18  MPU Alias 1 Region Attribute and S
 544:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t RBAR_A2;                      /*!< Offset: 0x1C  MPU Alias 2 Region Base Address Re
 545:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t RASR_A2;                      /*!< Offset: 0x20  MPU Alias 2 Region Attribute and S
 546:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t RBAR_A3;                      /*!< Offset: 0x24  MPU Alias 3 Region Base Address Re
 547:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t RASR_A3;                      /*!< Offset: 0x28  MPU Alias 3 Region Attribute and S
 548:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** } MPU_Type;                                                
 549:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 550:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* MPU Type Register */
 551:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
 552:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_TYPE_IREGION_Msk               (0xFFul << MPU_TYPE_IREGION_Pos)               /*!< MPU 
 553:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 554:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
 555:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_TYPE_DREGION_Msk               (0xFFul << MPU_TYPE_DREGION_Pos)               /*!< MPU 
 556:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 557:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
 558:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_TYPE_SEPARATE_Msk              (1ul << MPU_TYPE_SEPARATE_Pos)                 /*!< MPU 
 559:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 560:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* MPU Control Register */
 561:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
 562:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1ul << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
 563:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 564:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
 565:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_CTRL_HFNMIENA_Msk              (1ul << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
 566:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 567:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
 568:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_CTRL_ENABLE_Msk                (1ul << MPU_CTRL_ENABLE_Pos)                   /*!< MPU 
 569:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 570:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* MPU Region Number Register */
 571:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
 572:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_RNR_REGION_Msk                 (0xFFul << MPU_RNR_REGION_Pos)                 /*!< MPU 
 573:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 574:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* MPU Region Base Address Register */
 575:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
 576:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFul << MPU_RBAR_ADDR_Pos)             /*!< MPU 
 577:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 578:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
 579:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_RBAR_VALID_Msk                 (1ul << MPU_RBAR_VALID_Pos)                    /*!< MPU 
 580:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 581:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
 582:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_RBAR_REGION_Msk                (0xFul << MPU_RBAR_REGION_Pos)                 /*!< MPU 
 583:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 584:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* MPU Region Attribute and Size Register */
 585:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_RASR_XN_Pos                    28                                             /*!< MPU 
 586:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_RASR_XN_Msk                    (1ul << MPU_RASR_XN_Pos)                       /*!< MPU 
 587:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 588:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_RASR_AP_Pos                    24                                             /*!< MPU 
 589:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_RASR_AP_Msk                    (7ul << MPU_RASR_AP_Pos)                       /*!< MPU 
 590:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 591:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_RASR_TEX_Pos                   19                                             /*!< MPU 
 592:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_RASR_TEX_Msk                   (7ul << MPU_RASR_TEX_Pos)                      /*!< MPU 
 593:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 594:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_RASR_S_Pos                     18                                             /*!< MPU 
 595:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_RASR_S_Msk                     (1ul << MPU_RASR_S_Pos)                        /*!< MPU 
 596:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 597:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_RASR_C_Pos                     17                                             /*!< MPU 
 598:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_RASR_C_Msk                     (1ul << MPU_RASR_C_Pos)                        /*!< MPU 
 599:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 600:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_RASR_B_Pos                     16                                             /*!< MPU 
 601:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_RASR_B_Msk                     (1ul << MPU_RASR_B_Pos)                        /*!< MPU 
 602:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 603:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
 604:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_RASR_SRD_Msk                   (0xFFul << MPU_RASR_SRD_Pos)                   /*!< MPU 
 605:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 606:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
 607:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_RASR_SIZE_Msk                  (0x1Ful << MPU_RASR_SIZE_Pos)                  /*!< MPU 
 608:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 609:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_RASR_ENA_Pos                     0                                            /*!< MPU 
 610:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_RASR_ENA_Msk                    (0x1Ful << MPU_RASR_ENA_Pos)                  /*!< MPU 
 611:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 612:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_MPU */
 613:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #endif
 614:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 615:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 616:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /** @addtogroup CMSIS_CM3_CoreDebug CMSIS CM3 Core Debug
 617:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   memory mapped structure for Core Debug Register
 618:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   @{
 619:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
 620:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** typedef struct
 621:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** {
 622:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t DHCSR;                        /*!< Offset: 0x00  Debug Halting Control and Status R
 623:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __O  uint32_t DCRSR;                        /*!< Offset: 0x04  Debug Core Register Selector Regis
 624:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t DCRDR;                        /*!< Offset: 0x08  Debug Core Register Data Register 
 625:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t DEMCR;                        /*!< Offset: 0x0C  Debug Exception and Monitor Contro
 626:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** } CoreDebug_Type;
 627:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 628:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* Debug Halting Control and Status Register */
 629:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
 630:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFul << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
 631:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 632:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
 633:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1ul << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
 634:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 635:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
 636:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1ul << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
 637:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 638:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
 639:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1ul << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
 640:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 641:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
 642:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1ul << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
 643:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 644:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
 645:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1ul << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
 646:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 647:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
 648:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1ul << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
 649:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 650:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
 651:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1ul << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
 652:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 653:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
 654:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1ul << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
 655:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 656:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
 657:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1ul << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
 658:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 659:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
 660:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1ul << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
 661:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 662:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
 663:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1ul << CoreDebug_DHCSR_C_DEBUGEN_Pos)         /*!< Core
 664:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 665:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* Debug Core Register Selector Register */
 666:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
 667:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1ul << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
 668:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 669:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
 670:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1Ful << CoreDebug_DCRSR_REGSEL_Pos)         /*!< Core
 671:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 672:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* Debug Exception and Monitor Control Register */
 673:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
 674:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1ul << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
 675:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 676:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
 677:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1ul << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
 678:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 679:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
 680:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1ul << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
 681:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 682:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
 683:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1ul << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
 684:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 685:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
 686:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1ul << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
 687:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 688:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
 689:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1ul << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
 690:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 691:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
 692:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1ul << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
 693:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 694:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
 695:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1ul << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
 696:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 697:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
 698:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1ul << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
 699:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 700:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
 701:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1ul << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
 702:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 703:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
 704:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1ul << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
 705:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 706:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
 707:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1ul << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
 708:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 709:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
 710:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1ul << CoreDebug_DEMCR_VC_CORERESET_Pos)      /*!< Core
 711:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_CoreDebug */
 712:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 713:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 714:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* Memory mapping of Cortex-M3 Hardware */
 715:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCS_BASE            (0xE000E000)                              /*!< System Control Space Bas
 716:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define ITM_BASE            (0xE0000000)                              /*!< ITM Base Address        
 717:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_BASE      (0xE000EDF0)                              /*!< Core Debug Base Address 
 718:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SysTick_BASE        (SCS_BASE +  0x0010)                      /*!< SysTick Base Address    
 719:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define NVIC_BASE           (SCS_BASE +  0x0100)                      /*!< NVIC Base Address       
 720:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_BASE            (SCS_BASE +  0x0D00)                      /*!< System Control Block Bas
 721:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 722:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define InterruptType       ((InterruptType_Type *) SCS_BASE)         /*!< Interrupt Type Register 
 723:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB                 ((SCB_Type *)           SCB_BASE)         /*!< SCB configuration struct
 724:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SysTick             ((SysTick_Type *)       SysTick_BASE)     /*!< SysTick configuration st
 725:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define NVIC                ((NVIC_Type *)          NVIC_BASE)        /*!< NVIC configuration struc
 726:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define ITM                 ((ITM_Type *)           ITM_BASE)         /*!< ITM configuration struct
 727:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
 728:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 729:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 730:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90)                      /*!< Memory Protection Unit  
 731:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   #define MPU               ((MPU_Type*)            MPU_BASE)         /*!< Memory Protection Unit  
 732:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #endif
 733:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 734:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_core_register */
 735:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 736:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 737:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /*******************************************************************************
 738:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *                Hardware Abstraction Layer
 739:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  ******************************************************************************/
 740:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 741:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #if defined ( __CC_ARM   )
 742:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
 743:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
 744:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 745:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #elif defined ( __ICCARM__ )
 746:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   #define __ASM           __asm                                       /*!< asm keyword for IAR Comp
 747:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   #define __INLINE        inline                                      /*!< inline keyword for IAR C
 748:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 749:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #elif defined   (  __GNUC__  )
 750:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
 751:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
 752:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 753:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #elif defined   (  __TASKING__  )
 754:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 755:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 756:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 757:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #endif
 758:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 759:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 760:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* ###################  Compiler specific Intrinsics  ########################### */
 761:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 762:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #if defined ( __CC_ARM   ) /*------------------RealView Compiler -----------------*/
 763:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* ARM armcc specific functions */
 764:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 765:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define __enable_fault_irq                __enable_fiq
 766:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define __disable_fault_irq               __disable_fiq
 767:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 768:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define __NOP                             __nop
 769:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define __WFI                             __wfi
 770:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define __WFE                             __wfe
 771:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define __SEV                             __sev
 772:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define __ISB()                           __isb(0)
 773:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define __DSB()                           __dsb(0)
 774:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define __DMB()                           __dmb(0)
 775:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define __REV                             __rev
 776:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define __RBIT                            __rbit
 777:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define __LDREXB(ptr)                     ((unsigned char ) __ldrex(ptr))
 778:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define __LDREXH(ptr)                     ((unsigned short) __ldrex(ptr))
 779:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define __LDREXW(ptr)                     ((unsigned int  ) __ldrex(ptr))
 780:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 781:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 782:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 783:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 784:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 785:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* intrinsic unsigned long long __ldrexd(volatile void *ptr) */
 786:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* intrinsic int __strexd(unsigned long long val, volatile void *ptr) */
 787:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* intrinsic void __enable_irq();     */
 788:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* intrinsic void __disable_irq();    */
 789:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 790:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 791:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
 792:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Return the Process Stack Pointer
 793:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 794:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return ProcessStackPointer
 795:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 796:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Return the actual process stack pointer
 797:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
 798:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern uint32_t __get_PSP(void);
 799:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 800:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
 801:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Set the Process Stack Pointer
 802:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 803:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
 804:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 805:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
 806:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * (process stack pointer) Cortex processor register
 807:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
 808:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
 809:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 810:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
 811:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Return the Main Stack Pointer
 812:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 813:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return Main Stack Pointer
 814:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 815:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
 816:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Cortex processor register
 817:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
 818:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern uint32_t __get_MSP(void);
 819:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 820:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
 821:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Set the Main Stack Pointer
 822:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 823:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
 824:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 825:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
 826:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * (main stack pointer) Cortex processor register
 827:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
 828:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
 829:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 830:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
 831:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
 832:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 833:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param   value  value to reverse
 834:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return         reversed value
 835:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 836:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Reverse byte order in unsigned short value
 837:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
 838:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern uint32_t __REV16(uint16_t value);
 839:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 840:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
 841:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
 842:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 843:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param   value  value to reverse
 844:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return         reversed value
 845:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 846:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
 847:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
 848:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern int32_t __REVSH(int16_t value);
 849:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 850:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 851:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #if (__ARMCC_VERSION < 400000)
 852:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 853:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
 854:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 855:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 856:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 857:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
 858:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern void __CLREX(void);
 859:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 860:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
 861:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Return the Base Priority value
 862:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 863:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return BasePriority
 864:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 865:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Return the content of the base priority register
 866:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
 867:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern uint32_t __get_BASEPRI(void);
 868:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 869:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
 870:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Set the Base Priority value
 871:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 872:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  basePri  BasePriority
 873:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 874:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Set the base priority register
 875:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
 876:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
 877:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 878:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
 879:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Return the Priority Mask value
 880:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 881:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return PriMask
 882:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 883:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 884:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
 885:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern uint32_t __get_PRIMASK(void);
 886:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 887:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
 888:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Set the Priority Mask value
 889:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 890:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param   priMask  PriMask
 891:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 892:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Set the priority mask bit in the priority mask register
 893:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
 894:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
 895:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 896:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
 897:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Return the Fault Mask value
 898:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 899:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return FaultMask
 900:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 901:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Return the content of the fault mask register
 902:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
 903:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
 904:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 905:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
 906:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Set the Fault Mask value
 907:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 908:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  faultMask faultMask value
 909:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 910:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Set the fault mask register
 911:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
 912:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
 913:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 914:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
 915:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Return the Control Register value
 916:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * 
 917:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return Control value
 918:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 919:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Return the content of the control register
 920:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
 921:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern uint32_t __get_CONTROL(void);
 922:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 923:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
 924:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Set the Control Register value
 925:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 926:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  control  Control value
 927:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 928:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Set the control register
 929:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
 930:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern void __set_CONTROL(uint32_t control);
 931:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 932:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #else  /* (__ARMCC_VERSION >= 400000)  */
 933:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 934:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
 935:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 936:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 937:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 938:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
 939:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define __CLREX                           __clrex
 940:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 941:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
 942:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Return the Base Priority value
 943:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 944:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return BasePriority
 945:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 946:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Return the content of the base priority register
 947:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
 948:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** static __INLINE uint32_t  __get_BASEPRI(void)
 949:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** {
 950:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 951:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   return(__regBasePri);
 952:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** }
 953:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 954:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
 955:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Set the Base Priority value
 956:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 957:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  basePri  BasePriority
 958:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 959:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Set the base priority register
 960:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
 961:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** static __INLINE void __set_BASEPRI(uint32_t basePri)
 962:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** {
 963:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 964:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __regBasePri = (basePri & 0xff);
 965:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** }
 966:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 967:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
 968:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Return the Priority Mask value
 969:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 970:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return PriMask
 971:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 972:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 973:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
 974:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** static __INLINE uint32_t __get_PRIMASK(void)
 975:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** {
 976:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 977:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   return(__regPriMask);
 978:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** }
 979:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 980:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
 981:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Set the Priority Mask value
 982:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 983:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  priMask  PriMask
 984:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 985:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Set the priority mask bit in the priority mask register
 986:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
 987:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** static __INLINE void __set_PRIMASK(uint32_t priMask)
 988:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** {
 989:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 990:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __regPriMask = (priMask);
 991:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** }
 992:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 993:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
 994:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Return the Fault Mask value
 995:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 996:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return FaultMask
 997:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 998:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Return the content of the fault mask register
 999:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1000:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** static __INLINE uint32_t __get_FAULTMASK(void)
1001:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** {
1002:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1003:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   return(__regFaultMask);
1004:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** }
1005:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1006:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1007:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Set the Fault Mask value
1008:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1009:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  faultMask  faultMask value
1010:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1011:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Set the fault mask register
1012:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1013:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** static __INLINE void __set_FAULTMASK(uint32_t faultMask)
1014:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** {
1015:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1016:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __regFaultMask = (faultMask & 1);
1017:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** }
1018:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1019:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1020:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Return the Control Register value
1021:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * 
1022:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return Control value
1023:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1024:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Return the content of the control register
1025:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1026:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** static __INLINE uint32_t __get_CONTROL(void)
1027:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** {
1028:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1029:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   return(__regControl);
1030:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** }
1031:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1032:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1033:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Set the Control Register value
1034:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1035:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  control  Control value
1036:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1037:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Set the control register
1038:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1039:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** static __INLINE void __set_CONTROL(uint32_t control)
1040:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** {
1041:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1042:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __regControl = control;
1043:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** }
1044:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1045:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #endif /* __ARMCC_VERSION  */ 
1046:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1047:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1048:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1049:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #elif (defined (__ICCARM__)) /*------------------ ICC Compiler -------------------*/
1050:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* IAR iccarm specific functions */
1051:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1052:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define __enable_irq                              __enable_interrupt        /*!< global Interrupt e
1053:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define __disable_irq                             __disable_interrupt       /*!< global Interrupt d
1054:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1055:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** static __INLINE void __enable_fault_irq()         { __ASM ("cpsie f"); }
1056:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** static __INLINE void __disable_fault_irq()        { __ASM ("cpsid f"); }
1057:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1058:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define __NOP                                     __no_operation            /*!< no operation intri
1059:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** static __INLINE  void __WFI()                     { __ASM ("wfi"); }
1060:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** static __INLINE  void __WFE()                     { __ASM ("wfe"); }
1061:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** static __INLINE  void __SEV()                     { __ASM ("sev"); }
1062:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** static __INLINE  void __CLREX()                   { __ASM ("clrex"); }
1063:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1064:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* intrinsic void __ISB(void)                                     */
1065:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* intrinsic void __DSB(void)                                     */
1066:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* intrinsic void __DMB(void)                                     */
1067:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* intrinsic void __set_PRIMASK();                                */
1068:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* intrinsic void __get_PRIMASK();                                */
1069:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* intrinsic void __set_FAULTMASK();                              */
1070:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* intrinsic void __get_FAULTMASK();                              */
1071:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* intrinsic uint32_t __REV(uint32_t value);                      */
1072:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* intrinsic uint32_t __REVSH(uint32_t value);                    */
1073:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* intrinsic unsigned long __STREX(unsigned long, unsigned long); */
1074:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* intrinsic unsigned long __LDREX(unsigned long *);              */
1075:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1076:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1077:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1078:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Return the Process Stack Pointer
1079:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1080:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return ProcessStackPointer
1081:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1082:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Return the actual process stack pointer
1083:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1084:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern uint32_t __get_PSP(void);
1085:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1086:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1087:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Set the Process Stack Pointer
1088:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1089:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1090:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1091:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
1092:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * (process stack pointer) Cortex processor register
1093:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1094:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1095:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1096:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1097:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Return the Main Stack Pointer
1098:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1099:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return Main Stack Pointer
1100:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1101:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1102:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Cortex processor register
1103:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1104:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern uint32_t __get_MSP(void);
1105:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1106:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1107:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Set the Main Stack Pointer
1108:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1109:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1110:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1111:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
1112:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * (main stack pointer) Cortex processor register
1113:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1114:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1115:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1116:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1117:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1118:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1119:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  value  value to reverse
1120:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return        reversed value
1121:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1122:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Reverse byte order in unsigned short value
1123:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1124:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1125:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1126:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1127:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Reverse bit order of value
1128:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1129:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  value  value to reverse
1130:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return        reversed value
1131:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1132:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Reverse bit order of value
1133:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1134:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1135:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1136:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1137:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1138:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1139:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  *addr  address pointer
1140:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return        value of (*address)
1141:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1142:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Exclusive LDR command for 8 bit values)
1143:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1144:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1145:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1146:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1147:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1148:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1149:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  *addr  address pointer
1150:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return        value of (*address)
1151:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1152:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Exclusive LDR command for 16 bit values
1153:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1154:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1155:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1156:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1157:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1158:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1159:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  *addr  address pointer
1160:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return        value of (*address)
1161:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1162:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Exclusive LDR command for 32 bit values
1163:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1164:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1165:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1166:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1167:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1168:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1169:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  value  value to store
1170:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  *addr  address pointer
1171:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return        successful / failed
1172:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1173:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Exclusive STR command for 8 bit values
1174:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1175:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1176:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1177:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1178:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1179:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1180:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  value  value to store
1181:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  *addr  address pointer
1182:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return        successful / failed
1183:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1184:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Exclusive STR command for 16 bit values
1185:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1186:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1187:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1188:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1189:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1190:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1191:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  value  value to store
1192:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  *addr  address pointer
1193:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return        successful / failed
1194:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1195:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Exclusive STR command for 32 bit values
1196:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1197:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1198:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1199:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1200:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1201:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #elif (defined (__GNUC__)) /*------------------ GNU Compiler ---------------------*/
1202:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* GNU gcc specific functions */
1203:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1204:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** static __INLINE void __enable_irq()               { __ASM volatile ("cpsie i"); }
1205:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** static __INLINE void __disable_irq()              { __ASM volatile ("cpsid i"); }
1206:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1207:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** static __INLINE void __enable_fault_irq()         { __ASM volatile ("cpsie f"); }
1208:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** static __INLINE void __disable_fault_irq()        { __ASM volatile ("cpsid f"); }
1209:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1210:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** static __INLINE void __NOP()                      { __ASM volatile ("nop"); }
1211:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** static __INLINE void __WFI()                      { __ASM volatile ("wfi"); }
1212:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** static __INLINE void __WFE()                      { __ASM volatile ("wfe"); }
1213:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** static __INLINE void __SEV()                      { __ASM volatile ("sev"); }
1214:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** static __INLINE void __ISB()                      { __ASM volatile ("isb"); }
1215:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** static __INLINE void __DSB()                      { __ASM volatile ("dsb"); }
1216:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** static __INLINE void __DMB()                      { __ASM volatile ("dmb"); }
1217:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** static __INLINE void __CLREX()                    { __ASM volatile ("clrex"); }
1218:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1219:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1220:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1221:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Return the Process Stack Pointer
1222:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1223:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return ProcessStackPointer
1224:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1225:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Return the actual process stack pointer
1226:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1227:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern uint32_t __get_PSP(void);
1228:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1229:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1230:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Set the Process Stack Pointer
1231:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1232:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1233:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1234:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
1235:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * (process stack pointer) Cortex processor register
1236:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1237:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1238:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1239:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1240:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Return the Main Stack Pointer
1241:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1242:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return Main Stack Pointer
1243:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1244:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1245:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Cortex processor register
1246:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1247:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern uint32_t __get_MSP(void);
1248:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1249:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1250:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Set the Main Stack Pointer
1251:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1252:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1253:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1254:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
1255:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * (main stack pointer) Cortex processor register
1256:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1257:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1258:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1259:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1260:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Return the Base Priority value
1261:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1262:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return BasePriority
1263:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1264:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Return the content of the base priority register
1265:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1266:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern uint32_t __get_BASEPRI(void);
1267:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1268:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1269:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Set the Base Priority value
1270:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1271:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  basePri  BasePriority
1272:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1273:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Set the base priority register
1274:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1275:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
1276:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1277:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1278:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Return the Priority Mask value
1279:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1280:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return PriMask
1281:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1282:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
1283:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1284:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern uint32_t  __get_PRIMASK(void);
1285:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1286:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1287:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Set the Priority Mask value
1288:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1289:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  priMask  PriMask
1290:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1291:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Set the priority mask bit in the priority mask register
1292:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1293:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
1294:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1295:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1296:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Return the Fault Mask value
1297:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1298:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return FaultMask
1299:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1300:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Return the content of the fault mask register
1301:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1302:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
1303:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1304:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1305:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Set the Fault Mask value
1306:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1307:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  faultMask  faultMask value
1308:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1309:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Set the fault mask register
1310:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1311:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
1312:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1313:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1314:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Return the Control Register value
1315:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** * 
1316:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** *  @return Control value
1317:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1318:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Return the content of the control register
1319:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1320:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern uint32_t __get_CONTROL(void);
1321:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1322:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1323:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Set the Control Register value
1324:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1325:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  control  Control value
1326:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1327:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Set the control register
1328:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1329:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern void __set_CONTROL(uint32_t control);
1330:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1331:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1332:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Reverse byte order in integer value
1333:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1334:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  value  value to reverse
1335:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return        reversed value
1336:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1337:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Reverse byte order in integer value
1338:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1339:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern uint32_t __REV(uint32_t value);
1340:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1341:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1342:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1343:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1344:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  value  value to reverse
1345:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return        reversed value
1346:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1347:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Reverse byte order in unsigned short value
1348:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1349:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1350:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1351:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1352:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
1353:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1354:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  value  value to reverse
1355:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return        reversed value
1356:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1357:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
1358:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1359:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern int32_t __REVSH(int16_t value);
1360:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1361:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1362:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Reverse bit order of value
1363:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1364:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  value  value to reverse
1365:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return        reversed value
1366:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1367:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Reverse bit order of value
1368:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1369:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1370:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1371:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1372:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1373:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1374:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  *addr  address pointer
1375:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return        value of (*address)
1376:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1377:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Exclusive LDR command for 8 bit value
1378:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1379:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1380:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1381:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1382:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1383:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1384:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  *addr  address pointer
1385:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return        value of (*address)
1386:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1387:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Exclusive LDR command for 16 bit values
1388:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1389:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1390:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1391:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1392:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1393:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1394:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  *addr  address pointer
1395:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return        value of (*address)
1396:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1397:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Exclusive LDR command for 32 bit values
1398:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1399:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1400:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1401:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1402:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1403:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1404:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  value  value to store
1405:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  *addr  address pointer
1406:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return        successful / failed
1407:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1408:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Exclusive STR command for 8 bit values
1409:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1410:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1411:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1412:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1413:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1414:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1415:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  value  value to store
1416:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  *addr  address pointer
1417:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return        successful / failed
1418:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1419:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Exclusive STR command for 16 bit values
1420:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1421:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1422:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1423:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1424:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1425:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1426:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  value  value to store
1427:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  *addr  address pointer
1428:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return        successful / failed
1429:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1430:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Exclusive STR command for 32 bit values
1431:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1432:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1433:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1434:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1435:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #elif (defined (__TASKING__)) /*------------------ TASKING Compiler ---------------------*/
1436:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* TASKING carm specific functions */
1437:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1438:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /*
1439:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * The CMSIS functions have been implemented as intrinsics in the compiler.
1440:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Please use "carm -?i" to get an up to date list of all instrinsics,
1441:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Including the CMSIS ones.
1442:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1443:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1444:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #endif
1445:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1446:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1447:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /** @addtogroup CMSIS_CM3_Core_FunctionInterface CMSIS CM3 Core Function Interface
1448:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   Core  Function Interface containing:
1449:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   - Core NVIC Functions
1450:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   - Core SysTick Functions
1451:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   - Core Reset Functions
1452:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** */
1453:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /*@{*/
1454:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1455:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* ##########################   NVIC functions  #################################### */
1456:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1457:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1458:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Set the Priority Grouping in NVIC Interrupt Controller
1459:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1460:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  PriorityGroup is priority grouping field
1461:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1462:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Set the priority grouping field using the required unlock sequence.
1463:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * The parameter priority_grouping is assigned to the field 
1464:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * SCB->AIRCR [10:8] PRIGROUP field. Only values from 0..7 are used.
1465:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * In case of a conflict between priority grouping and available
1466:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1467:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1468:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** static __INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1469:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** {
1470:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   uint32_t reg_value;
1471:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);                         /* only values 0..7 a
1472:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   
1473:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1474:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   reg_value &= ~(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk);             /* clear bits to chan
1475:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   reg_value  =  (reg_value                       |
1476:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****                 (0x5FA << SCB_AIRCR_VECTKEY_Pos) | 
1477:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****                 (PriorityGroupTmp << 8));                                     /* Insert write key a
1478:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   SCB->AIRCR =  reg_value;
1479:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** }
1480:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1481:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1482:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Get the Priority Grouping from NVIC Interrupt Controller
1483:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1484:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return priority grouping field 
1485:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1486:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Get the priority grouping from NVIC Interrupt Controller.
1487:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * priority grouping is SCB->AIRCR [10:8] PRIGROUP field.
1488:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1489:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** static __INLINE uint32_t NVIC_GetPriorityGrouping(void)
1490:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** {
1491:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   return ((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos);   /* read priority grou
1492:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** }
1493:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1494:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1495:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Enable Interrupt in NVIC Interrupt Controller
1496:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1497:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  IRQn   The positive number of the external interrupt to enable
1498:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1499:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Enable a device specific interupt in the NVIC interrupt controller.
1500:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * The interrupt number cannot be a negative value.
1501:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1502:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** static __INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1503:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** {
1504:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
1505:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** }
1506:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1507:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1508:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Disable the interrupt line for external interrupt specified
1509:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * 
1510:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  IRQn   The positive number of the external interrupt to disable
1511:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * 
1512:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Disable a device specific interupt in the NVIC interrupt controller.
1513:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * The interrupt number cannot be a negative value.
1514:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1515:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** static __INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1516:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** {
1517:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
1518:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** }
1519:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1520:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1521:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Read the interrupt pending bit for a device specific interrupt source
1522:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * 
1523:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  IRQn    The number of the device specifc interrupt
1524:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return         1 = interrupt pending, 0 = interrupt not pending
1525:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1526:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Read the pending register in NVIC and return 1 if its status is pending, 
1527:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * otherwise it returns 0
1528:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1529:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** static __INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
1530:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** {
1531:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   return((uint32_t) ((NVIC->ISPR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0)); 
1532:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** }
1533:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1534:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1535:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Set the pending bit for an external interrupt
1536:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * 
1537:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  IRQn    The number of the interrupt for set pending
1538:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1539:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Set the pending bit for the specified interrupt.
1540:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * The interrupt number cannot be a negative value.
1541:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1542:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** static __INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
1543:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** {
1544:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   NVIC->ISPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* set interrupt pending 
1545:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** }
1546:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1547:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1548:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Clear the pending bit for an external interrupt
1549:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1550:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  IRQn    The number of the interrupt for clear pending
1551:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1552:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Clear the pending bit for the specified interrupt. 
1553:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * The interrupt number cannot be a negative value.
1554:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1555:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** static __INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1556:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** {
1557:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrup
1558:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** }
1559:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1560:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1561:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Read the active bit for an external interrupt
1562:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1563:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  IRQn    The number of the interrupt for read active bit
1564:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return         1 = interrupt active, 0 = interrupt not active
1565:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1566:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Read the active register in NVIC and returns 1 if its status is active, 
1567:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * otherwise it returns 0.
1568:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1569:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** static __INLINE uint32_t NVIC_GetActive(IRQn_Type IRQn)
1570:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** {
1571:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   return((uint32_t)((NVIC->IABR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0)); /
1572:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** }
1573:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1574:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1575:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Set the priority for an interrupt
1576:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1577:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  IRQn      The number of the interrupt for set priority
1578:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  priority  The priority to set
1579:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1580:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Set the priority for the specified interrupt. The interrupt 
1581:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * number can be positive to specify an external (device specific) 
1582:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * interrupt, or negative to specify an internal (core) interrupt.
1583:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1584:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Note: The priority cannot be set for every core interrupt.
1585:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1586:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** static __INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1587:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** {
1588:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   if(IRQn < 0) {
1589:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****     SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set 
1590:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   else {
1591:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****     NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set 
1592:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** }
1593:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1594:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1595:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Read the priority for an interrupt
1596:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1597:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  IRQn      The number of the interrupt for get priority
1598:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return           The priority for the interrupt
1599:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1600:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Read the priority for the specified interrupt. The interrupt 
1601:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * number can be positive to specify an external (device specific) 
1602:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * interrupt, or negative to specify an internal (core) interrupt.
1603:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1604:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * The returned priority value is automatically aligned to the implemented
1605:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * priority bits of the microcontroller.
1606:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1607:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Note: The priority cannot be set for every core interrupt.
1608:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1609:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** static __INLINE uint32_t NVIC_GetPriority(IRQn_Type IRQn)
1610:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** {
1611:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1612:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   if(IRQn < 0) {
1613:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****     return((uint32_t)(SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] >> (8 - __NVIC_PRIO_BITS)));  } /* get p
1614:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   else {
1615:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****     return((uint32_t)(NVIC->IP[(uint32_t)(IRQn)]           >> (8 - __NVIC_PRIO_BITS)));  } /* get p
1616:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** }
1617:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1618:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1619:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1620:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Encode the priority for an interrupt
1621:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1622:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  PriorityGroup    The used priority group
1623:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  PreemptPriority  The preemptive priority value (starting from 0)
1624:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  SubPriority      The sub priority value (starting from 0)
1625:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return                  The encoded priority for the interrupt
1626:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1627:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Encode the priority for an interrupt with the given priority group,
1628:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * preemptive priority value and sub priority value.
1629:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * In case of a conflict between priority grouping and available
1630:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * priority bits (__NVIC_PRIO_BITS) the samllest possible priority group is set.
1631:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1632:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * The returned priority value can be used for NVIC_SetPriority(...) function
1633:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1634:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** static __INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
1635:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** {
1636:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);          /* only values 0..7 are used        
1637:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   uint32_t PreemptPriorityBits;
1638:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   uint32_t SubPriorityBits;
1639:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1640:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   PreemptPriorityBits = ((7 - PriorityGroupTmp) > __NVIC_PRIO_BITS) ? __NVIC_PRIO_BITS : 7 - Priori
1641:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   SubPriorityBits     = ((PriorityGroupTmp + __NVIC_PRIO_BITS) < 7) ? 0 : PriorityGroupTmp - 7 + __
1642:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  
1643:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   return (
1644:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****            ((PreemptPriority & ((1 << (PreemptPriorityBits)) - 1)) << SubPriorityBits) |
1645:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****            ((SubPriority     & ((1 << (SubPriorityBits    )) - 1)))
1646:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****          );
1647:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** }
1648:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1649:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1650:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1651:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Decode the priority of an interrupt
1652:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1653:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  Priority           The priority for the interrupt
1654:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  PriorityGroup      The used priority group
1655:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  pPreemptPriority   The preemptive priority value (starting from 0)
1656:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  pSubPriority       The sub priority value (starting from 0)
1657:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1658:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Decode an interrupt priority value with the given priority group to 
1659:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * preemptive priority value and sub priority value.
1660:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * In case of a conflict between priority grouping and available
1661:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * priority bits (__NVIC_PRIO_BITS) the samllest possible priority group is set.
1662:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1663:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * The priority value can be retrieved with NVIC_GetPriority(...) function
1664:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1665:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** static __INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* pPre
1666:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** {
1667:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);          /* only values 0..7 are used        
1668:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   uint32_t PreemptPriorityBits;
1669:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   uint32_t SubPriorityBits;
1670:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1671:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   PreemptPriorityBits = ((7 - PriorityGroupTmp) > __NVIC_PRIO_BITS) ? __NVIC_PRIO_BITS : 7 - Priori
1672:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   SubPriorityBits     = ((PriorityGroupTmp + __NVIC_PRIO_BITS) < 7) ? 0 : PriorityGroupTmp - 7 + __
1673:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   
1674:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & ((1 << (PreemptPriorityBits)) - 1);
1675:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   *pSubPriority     = (Priority                   ) & ((1 << (SubPriorityBits    )) - 1);
1676:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** }
1677:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1678:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1679:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1680:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* ##################################    SysTick function  ########################################
1681:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1682:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #if (!defined (__Vendor_SysTickConfig)) || (__Vendor_SysTickConfig == 0)
1683:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1684:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1685:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Initialize and start the SysTick counter and its interrupt.
1686:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1687:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param   ticks   number of ticks between two interrupts
1688:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return  1 = failed, 0 = successful
1689:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1690:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Initialise the system tick timer and its interrupt and start the
1691:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * system tick timer / counter in free running mode to generate 
1692:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * periodical interrupts.
1693:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1694:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** static __INLINE uint32_t SysTick_Config(uint32_t ticks)
1695:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** { 
1696:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   if (ticks > SysTick_LOAD_RELOAD_Msk)  return (1);            /* Reload value impossible */
1697:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****                                                                
1698:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   SysTick->LOAD  = (ticks & SysTick_LOAD_RELOAD_Msk) - 1;      /* set reload register */
 18254              		.loc 4 1698 0
 18255 0000 4EF21003 		movw	r3, #:lower16:-536813552
 18256 0004 CEF20003 		movt	r3, #:upper16:-536813552
 18257 0008 45F6BF52 		movw	r2, #23999
 18258 000c 5A60     		str	r2, [r3, #4]
 18259              	.LBB10:
 18260              	.LBB11:
 18261              		.loc 4 1589 0
 18262 000e 4EF60052 		movw	r2, #:lower16:-536810240
 18263 0012 CEF20002 		movt	r2, #:upper16:-536810240
 18264 0016 6FF00F01 		mvn	r1, #15
 18265 001a 82F82310 		strb	r1, [r2, #35]
 18266              	.LBE11:
 18267              	.LBE10:
1699:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   NVIC_SetPriority (SysTick_IRQn, (1<<__NVIC_PRIO_BITS) - 1);  /* set Priority for Cortex-M0 System
1700:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   SysTick->VAL   = 0;                                          /* Load the SysTick Counter Value */
 18268              		.loc 4 1700 0
 18269 001e 4FF00002 		mov	r2, #0
 18270 0022 9A60     		str	r2, [r3, #8]
1701:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk | 
 18271              		.loc 4 1701 0
 18272 0024 4FF00702 		mov	r2, #7
 18273 0028 1A60     		str	r2, [r3, #0]
 18274              	.LBE9:
 18275              	.LBE8:
  15:../src/delay.c **** 
  16:../src/delay.c **** 	if (SysTick_Config(24000))	//ms
  17:../src/delay.c **** 	  {
  18:../src/delay.c **** 	    while (1);
  19:../src/delay.c **** 	  }
  20:../src/delay.c **** 
  21:../src/delay.c **** }
 18276              		.loc 1 21 0
 18277 002a 7047     		bx	lr
 18278              		.cfi_endproc
 18279              	.LFE29:
 18281              		.section	.text.Delay,"ax",%progbits
 18282              		.align	2
 18283              		.global	Delay
 18284              		.thumb
 18285              		.thumb_func
 18287              	Delay:
 18288              	.LFB30:
  22:../src/delay.c **** 
  23:../src/delay.c **** void Delay(__IO uint32_t nTime)
  24:../src/delay.c **** {
 18289              		.loc 1 24 0
 18290              		.cfi_startproc
 18291              		@ args = 0, pretend = 0, frame = 8
 18292              		@ frame_needed = 0, uses_anonymous_args = 0
 18293              		@ link register save eliminated.
 18294              	.LVL0:
 18295 0000 82B0     		sub	sp, sp, #8
 18296              	.LCFI0:
 18297              		.cfi_def_cfa_offset 8
 18298 0002 0190     		str	r0, [sp, #4]
  25:../src/delay.c ****   TimingDelay = nTime;
 18299              		.loc 1 25 0
 18300 0004 019A     		ldr	r2, [sp, #4]
 18301 0006 40F20003 		movw	r3, #:lower16:.LANCHOR0
 18302 000a C0F20003 		movt	r3, #:upper16:.LANCHOR0
 18303 000e 1A60     		str	r2, [r3, #0]
  26:../src/delay.c **** 
  27:../src/delay.c ****   while(TimingDelay != 0);
 18304              		.loc 1 27 0
 18305 0010 1A46     		mov	r2, r3
 18306              	.LVL1:
 18307              	.L4:
 18308 0012 1368     		ldr	r3, [r2, #0]
 18309 0014 002B     		cmp	r3, #0
 18310 0016 FCD1     		bne	.L4
  28:../src/delay.c **** }
 18311              		.loc 1 28 0
 18312 0018 02B0     		add	sp, sp, #8
 18313 001a 7047     		bx	lr
 18314              		.cfi_endproc
 18315              	.LFE30:
 18317              		.section	.text.TimingDelay_Decrement,"ax",%progbits
 18318              		.align	2
 18319              		.global	TimingDelay_Decrement
 18320              		.thumb
 18321              		.thumb_func
 18323              	TimingDelay_Decrement:
 18324              	.LFB31:
  29:../src/delay.c **** 
  30:../src/delay.c **** 
  31:../src/delay.c **** void TimingDelay_Decrement(void)
  32:../src/delay.c **** {
 18325              		.loc 1 32 0
 18326              		.cfi_startproc
 18327              		@ args = 0, pretend = 0, frame = 0
 18328              		@ frame_needed = 0, uses_anonymous_args = 0
 18329              		@ link register save eliminated.
  33:../src/delay.c ****   if (TimingDelay != 0x00)
 18330              		.loc 1 33 0
 18331 0000 40F20003 		movw	r3, #:lower16:.LANCHOR0
 18332 0004 C0F20003 		movt	r3, #:upper16:.LANCHOR0
 18333 0008 1B68     		ldr	r3, [r3, #0]
 18334 000a 3BB1     		cbz	r3, .L9
  34:../src/delay.c ****   {
  35:../src/delay.c ****     TimingDelay--;
 18335              		.loc 1 35 0
 18336 000c 40F20003 		movw	r3, #:lower16:.LANCHOR0
 18337 0010 C0F20003 		movt	r3, #:upper16:.LANCHOR0
 18338 0014 1A68     		ldr	r2, [r3, #0]
 18339 0016 02F1FF32 		add	r2, r2, #-1
 18340 001a 1A60     		str	r2, [r3, #0]
 18341              	.L9:
 18342 001c 7047     		bx	lr
 18343              		.cfi_endproc
 18344              	.LFE31:
 18346 001e 00BF     		.section	.text.Delay_us,"ax",%progbits
 18347              		.align	2
 18348              		.global	Delay_us
 18349              		.thumb
 18350              		.thumb_func
 18352              	Delay_us:
 18353              	.LFB33:
  36:../src/delay.c ****   }
  37:../src/delay.c **** }
  38:../src/delay.c **** 
  39:../src/delay.c **** void Delay_us_init() {
  40:../src/delay.c **** 
  41:../src/delay.c **** 	TIM_TimeBaseInitTypeDef TIM_TimeBaseStructure;
  42:../src/delay.c **** 	TIM_TimeBaseStructInit(&TIM_TimeBaseStructure);
  43:../src/delay.c **** 
  44:../src/delay.c **** 	TIM_TimeBaseStructure.TIM_ClockDivision	= 0;
  45:../src/delay.c **** 	TIM_TimeBaseStructure.TIM_CounterMode	= TIM_CounterMode_Up;
  46:../src/delay.c **** 	TIM_TimeBaseStructure.TIM_Period	= UINT16_MAX;
  47:../src/delay.c **** 	TIM_TimeBaseStructure.TIM_Prescaler	= (SYS_CLK / DELAY_TIM_FREQUENCY) - 1;
  48:../src/delay.c **** 
  49:../src/delay.c **** 	TIM_TimeBaseInit(TIM2, &TIM_TimeBaseStructure);
  50:../src/delay.c **** 
  51:../src/delay.c **** 	TIM_Cmd(TIM2, ENABLE);
  52:../src/delay.c **** }
  53:../src/delay.c **** 
  54:../src/delay.c **** /* wait busy loop, microseconds */
  55:../src/delay.c **** void Delay_us( uint16_t us )
  56:../src/delay.c **** {
 18354              		.loc 1 56 0
 18355              		.cfi_startproc
 18356              		@ args = 0, pretend = 0, frame = 0
 18357              		@ frame_needed = 0, uses_anonymous_args = 0
 18358              		@ link register save eliminated.
 18359              	.LVL2:
  57:../src/delay.c **** 	TIM2->CNT = 0;
 18360              		.loc 1 57 0
 18361 0000 4FF08043 		mov	r3, #1073741824
 18362 0004 4FF00002 		mov	r2, #0	@ movhi
 18363 0008 9A84     		strh	r2, [r3, #36]	@ movhi
 18364              	.L11:
  58:../src/delay.c **** 	/* use 16 bit count wrap around */
  59:../src/delay.c **** 	while((uint16_t)(TIM2->CNT) <= us);
 18365              		.loc 1 59 0
 18366 000a 9A8C     		ldrh	r2, [r3, #36]
 18367 000c 92B2     		uxth	r2, r2
 18368 000e 8242     		cmp	r2, r0
 18369 0010 FBD9     		bls	.L11
  60:../src/delay.c **** }
 18370              		.loc 1 60 0
 18371 0012 7047     		bx	lr
 18372              		.cfi_endproc
 18373              	.LFE33:
 18375              		.section	.text.Delay_us_init,"ax",%progbits
 18376              		.align	2
 18377              		.global	Delay_us_init
 18378              		.thumb
 18379              		.thumb_func
 18381              	Delay_us_init:
 18382              	.LFB32:
 18383              		.loc 1 39 0
 18384              		.cfi_startproc
 18385              		@ args = 0, pretend = 0, frame = 16
 18386              		@ frame_needed = 0, uses_anonymous_args = 0
 18387 0000 10B5     		push	{r4, lr}
 18388              	.LCFI1:
 18389              		.cfi_def_cfa_offset 8
 18390 0002 84B0     		sub	sp, sp, #16
 18391              	.LCFI2:
 18392              		.cfi_def_cfa_offset 24
 18393              		.loc 1 42 0
 18394 0004 01AC     		add	r4, sp, #4
 18395              		.cfi_offset 14, -4
 18396              		.cfi_offset 4, -8
 18397 0006 2046     		mov	r0, r4
 18398 0008 FFF7FEFF 		bl	TIM_TimeBaseStructInit
 18399              		.loc 1 44 0
 18400 000c 4FF00003 		mov	r3, #0
 18401 0010 ADF80A30 		strh	r3, [sp, #10]	@ movhi
 18402              		.loc 1 45 0
 18403 0014 ADF80630 		strh	r3, [sp, #6]	@ movhi
 18404              		.loc 1 46 0
 18405 0018 4FF0FF33 		mov	r3, #-1	@ movhi
 18406 001c ADF80830 		strh	r3, [sp, #8]	@ movhi
 18407              		.loc 1 47 0
 18408 0020 4FF01703 		mov	r3, #23	@ movhi
 18409 0024 ADF80430 		strh	r3, [sp, #4]	@ movhi
 18410              		.loc 1 49 0
 18411 0028 4FF08040 		mov	r0, #1073741824
 18412 002c 2146     		mov	r1, r4
 18413 002e FFF7FEFF 		bl	TIM_TimeBaseInit
 18414              		.loc 1 51 0
 18415 0032 4FF08040 		mov	r0, #1073741824
 18416 0036 4FF00101 		mov	r1, #1
 18417 003a FFF7FEFF 		bl	TIM_Cmd
 18418              		.loc 1 52 0
 18419 003e 04B0     		add	sp, sp, #16
 18420 0040 10BD     		pop	{r4, pc}
 18421              		.cfi_endproc
 18422              	.LFE32:
 18424              		.global	timerCounter
 18425              		.global	arptimer
 18426 0042 00BF     		.section	.bss.timerCounter,"aw",%nobits
 18427              		.align	2
 18430              	timerCounter:
 18431 0000 00000000 		.space	4
 18432              		.section	.bss.TimingDelay,"aw",%nobits
 18433              		.align	2
 18434              		.set	.LANCHOR0,. + 0
 18437              	TimingDelay:
 18438 0000 00000000 		.space	4
 18439              		.section	.bss.arptimer,"aw",%nobits
 18440              		.align	2
 18443              	arptimer:
 18444 0000 00000000 		.space	4
 18445              		.text
 18446              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 delay.c
C:\Users\user\AppData\Local\Temp\cc2tGsNT.s:18240  .text.Delay_config:00000000 $t
C:\Users\user\AppData\Local\Temp\cc2tGsNT.s:18245  .text.Delay_config:00000000 Delay_config
C:\Users\user\AppData\Local\Temp\cc2tGsNT.s:18282  .text.Delay:00000000 $t
C:\Users\user\AppData\Local\Temp\cc2tGsNT.s:18287  .text.Delay:00000000 Delay
C:\Users\user\AppData\Local\Temp\cc2tGsNT.s:18434  .bss.TimingDelay:00000000 .LANCHOR0
C:\Users\user\AppData\Local\Temp\cc2tGsNT.s:18318  .text.TimingDelay_Decrement:00000000 $t
C:\Users\user\AppData\Local\Temp\cc2tGsNT.s:18323  .text.TimingDelay_Decrement:00000000 TimingDelay_Decrement
C:\Users\user\AppData\Local\Temp\cc2tGsNT.s:18347  .text.Delay_us:00000000 $t
C:\Users\user\AppData\Local\Temp\cc2tGsNT.s:18352  .text.Delay_us:00000000 Delay_us
C:\Users\user\AppData\Local\Temp\cc2tGsNT.s:18376  .text.Delay_us_init:00000000 $t
C:\Users\user\AppData\Local\Temp\cc2tGsNT.s:18381  .text.Delay_us_init:00000000 Delay_us_init
C:\Users\user\AppData\Local\Temp\cc2tGsNT.s:18430  .bss.timerCounter:00000000 timerCounter
C:\Users\user\AppData\Local\Temp\cc2tGsNT.s:18443  .bss.arptimer:00000000 arptimer
C:\Users\user\AppData\Local\Temp\cc2tGsNT.s:18427  .bss.timerCounter:00000000 $d
C:\Users\user\AppData\Local\Temp\cc2tGsNT.s:18433  .bss.TimingDelay:00000000 $d
C:\Users\user\AppData\Local\Temp\cc2tGsNT.s:18437  .bss.TimingDelay:00000000 TimingDelay
C:\Users\user\AppData\Local\Temp\cc2tGsNT.s:18440  .bss.arptimer:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
TIM_TimeBaseStructInit
TIM_TimeBaseInit
TIM_Cmd
