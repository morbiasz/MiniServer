   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"stm32f10x_pwr.c"
  23              	.Ltext0:
  24              		.file 1 "../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c"
 18356              		.align	2
 18357              		.global	PWR_BackupAccessCmd
 18358              		.thumb
 18359              		.thumb_func
 18361              	PWR_BackupAccessCmd:
 18362              	.LFB30:
   1:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** /**
   2:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   ******************************************************************************
   3:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   * @file    stm32f10x_pwr.c
   4:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   * @author  MCD Application Team
   5:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   * @version V3.3.0
   6:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   * @date    04/16/2010
   7:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   * @brief   This file provides all the PWR firmware functions.
   8:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   ******************************************************************************
   9:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   * @copy
  10:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   *
  11:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   *
  18:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   * <h2><center>&copy; COPYRIGHT 2010 STMicroelectronics</center></h2>
  19:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   */ 
  20:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** 
  21:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** /* Includes ------------------------------------------------------------------*/
  22:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** #include "stm32f10x_pwr.h"
  23:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** #include "stm32f10x_rcc.h"
  24:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** 
  25:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  26:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   * @{
  27:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   */
  28:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** 
  29:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** /** @defgroup PWR 
  30:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   * @brief PWR driver modules
  31:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   * @{
  32:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   */ 
  33:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** 
  34:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** /** @defgroup PWR_Private_TypesDefinitions
  35:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   * @{
  36:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   */
  37:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** 
  38:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** /**
  39:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   * @}
  40:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   */
  41:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** 
  42:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** /** @defgroup PWR_Private_Defines
  43:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   * @{
  44:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   */
  45:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** 
  46:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** /* --------- PWR registers bit address in the alias region ---------- */
  47:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** #define PWR_OFFSET               (PWR_BASE - PERIPH_BASE)
  48:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** 
  49:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** /* --- CR Register ---*/
  50:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** 
  51:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** /* Alias word address of DBP bit */
  52:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** #define CR_OFFSET                (PWR_OFFSET + 0x00)
  53:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** #define DBP_BitNumber            0x08
  54:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** #define CR_DBP_BB                (PERIPH_BB_BASE + (CR_OFFSET * 32) + (DBP_BitNumber * 4))
  55:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** 
  56:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** /* Alias word address of PVDE bit */
  57:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** #define PVDE_BitNumber           0x04
  58:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** #define CR_PVDE_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PVDE_BitNumber * 4))
  59:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** 
  60:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** /* --- CSR Register ---*/
  61:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** 
  62:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** /* Alias word address of EWUP bit */
  63:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** #define CSR_OFFSET               (PWR_OFFSET + 0x04)
  64:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** #define EWUP_BitNumber           0x08
  65:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** #define CSR_EWUP_BB              (PERIPH_BB_BASE + (CSR_OFFSET * 32) + (EWUP_BitNumber * 4))
  66:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** 
  67:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** /* ------------------ PWR registers bit mask ------------------------ */
  68:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** 
  69:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** /* CR register bit mask */
  70:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** #define CR_PDDS_Set              ((uint32_t)0x00000002)
  71:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** #define CR_DS_Mask               ((uint32_t)0xFFFFFFFC)
  72:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** #define CR_CWUF_Set              ((uint32_t)0x00000004)
  73:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** #define CR_PLS_Mask              ((uint32_t)0xFFFFFF1F)
  74:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** 
  75:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** /* --------- Cortex System Control register bit mask ---------------- */
  76:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** 
  77:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** /* Cortex System Control register address */
  78:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** #define SCB_SysCtrl              ((uint32_t)0xE000ED10)
  79:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** 
  80:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** /* SLEEPDEEP bit mask */
  81:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** #define SysCtrl_SLEEPDEEP_Set    ((uint32_t)0x00000004)
  82:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** #define SysCtrl_SLEEPDEEP_Reset  ((uint32_t)0xFFFFFFFB)
  83:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** 
  84:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** /**
  85:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   * @}
  86:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   */
  87:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** 
  88:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** /** @defgroup PWR_Private_Macros
  89:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   * @{
  90:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   */
  91:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** 
  92:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** /**
  93:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   * @}
  94:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   */
  95:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** 
  96:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** /** @defgroup PWR_Private_Variables
  97:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   * @{
  98:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   */
  99:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** 
 100:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** /**
 101:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   * @}
 102:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   */
 103:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** 
 104:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** /** @defgroup PWR_Private_FunctionPrototypes
 105:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   * @{
 106:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   */
 107:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** 
 108:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** /**
 109:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   * @}
 110:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   */
 111:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** 
 112:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** /** @defgroup PWR_Private_Functions
 113:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   * @{
 114:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   */
 115:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** 
 116:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** /**
 117:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   * @brief  Deinitializes the PWR peripheral registers to their default reset values.
 118:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   * @param  None
 119:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   * @retval None
 120:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   */
 121:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** void PWR_DeInit(void)
 122:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** {
 123:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_PWR, ENABLE);
 124:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_PWR, DISABLE);
 125:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** }
 126:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** 
 127:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** /**
 128:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   * @brief  Enables or disables access to the RTC and backup registers.
 129:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   * @param  NewState: new state of the access to the RTC and backup registers.
 130:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   *   This parameter can be: ENABLE or DISABLE.
 131:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   * @retval None
 132:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   */
 133:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** void PWR_BackupAccessCmd(FunctionalState NewState)
 134:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** {
 18363              		.loc 1 134 0
 18364              		.cfi_startproc
 18365              		@ args = 0, pretend = 0, frame = 0
 18366              		@ frame_needed = 0, uses_anonymous_args = 0
 18367              		@ link register save eliminated.
 18368              	.LVL0:
 135:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   /* Check the parameters */
 136:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 137:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   *(__IO uint32_t *) CR_DBP_BB = (uint32_t)NewState;
 18369              		.loc 1 137 0
 18370 0000 40F22003 		movw	r3, #:lower16:1108213792
 18371 0004 C4F20E23 		movt	r3, #:upper16:1108213792
 18372 0008 1860     		str	r0, [r3, #0]
 138:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** }
 18373              		.loc 1 138 0
 18374 000a 7047     		bx	lr
 18375              		.cfi_endproc
 18376              	.LFE30:
 18378              		.section	.text.PWR_PVDCmd,"ax",%progbits
 18379              		.align	2
 18380              		.global	PWR_PVDCmd
 18381              		.thumb
 18382              		.thumb_func
 18384              	PWR_PVDCmd:
 18385              	.LFB31:
 139:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** 
 140:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** /**
 141:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   * @brief  Enables or disables the Power Voltage Detector(PVD).
 142:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   * @param  NewState: new state of the PVD.
 143:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   *   This parameter can be: ENABLE or DISABLE.
 144:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   * @retval None
 145:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   */
 146:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** void PWR_PVDCmd(FunctionalState NewState)
 147:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** {
 18386              		.loc 1 147 0
 18387              		.cfi_startproc
 18388              		@ args = 0, pretend = 0, frame = 0
 18389              		@ frame_needed = 0, uses_anonymous_args = 0
 18390              		@ link register save eliminated.
 18391              	.LVL1:
 148:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   /* Check the parameters */
 149:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 150:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   *(__IO uint32_t *) CR_PVDE_BB = (uint32_t)NewState;
 18392              		.loc 1 150 0
 18393 0000 40F21003 		movw	r3, #:lower16:1108213776
 18394 0004 C4F20E23 		movt	r3, #:upper16:1108213776
 18395 0008 1860     		str	r0, [r3, #0]
 151:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** }
 18396              		.loc 1 151 0
 18397 000a 7047     		bx	lr
 18398              		.cfi_endproc
 18399              	.LFE31:
 18401              		.section	.text.PWR_PVDLevelConfig,"ax",%progbits
 18402              		.align	2
 18403              		.global	PWR_PVDLevelConfig
 18404              		.thumb
 18405              		.thumb_func
 18407              	PWR_PVDLevelConfig:
 18408              	.LFB32:
 152:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** 
 153:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** /**
 154:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   * @brief  Configures the voltage threshold detected by the Power Voltage Detector(PVD).
 155:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   * @param  PWR_PVDLevel: specifies the PVD detection level
 156:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   *   This parameter can be one of the following values:
 157:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   *     @arg PWR_PVDLevel_2V2: PVD detection level set to 2.2V
 158:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   *     @arg PWR_PVDLevel_2V3: PVD detection level set to 2.3V
 159:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   *     @arg PWR_PVDLevel_2V4: PVD detection level set to 2.4V
 160:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   *     @arg PWR_PVDLevel_2V5: PVD detection level set to 2.5V
 161:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   *     @arg PWR_PVDLevel_2V6: PVD detection level set to 2.6V
 162:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   *     @arg PWR_PVDLevel_2V7: PVD detection level set to 2.7V
 163:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   *     @arg PWR_PVDLevel_2V8: PVD detection level set to 2.8V
 164:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   *     @arg PWR_PVDLevel_2V9: PVD detection level set to 2.9V
 165:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   * @retval None
 166:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   */
 167:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** void PWR_PVDLevelConfig(uint32_t PWR_PVDLevel)
 168:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** {
 18409              		.loc 1 168 0
 18410              		.cfi_startproc
 18411              		@ args = 0, pretend = 0, frame = 0
 18412              		@ frame_needed = 0, uses_anonymous_args = 0
 18413              		@ link register save eliminated.
 18414              	.LVL2:
 169:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   uint32_t tmpreg = 0;
 170:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   /* Check the parameters */
 171:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   assert_param(IS_PWR_PVD_LEVEL(PWR_PVDLevel));
 172:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   tmpreg = PWR->CR;
 18415              		.loc 1 172 0
 18416 0000 47F20003 		movw	r3, #:lower16:1073770496
 18417 0004 C4F20003 		movt	r3, #:upper16:1073770496
 18418 0008 1A68     		ldr	r2, [r3, #0]
 18419              	.LVL3:
 173:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   /* Clear PLS[7:5] bits */
 174:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   tmpreg &= CR_PLS_Mask;
 18420              		.loc 1 174 0
 18421 000a 22F0E002 		bic	r2, r2, #224
 18422              	.LVL4:
 175:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   /* Set PLS[7:5] bits according to PWR_PVDLevel value */
 176:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   tmpreg |= PWR_PVDLevel;
 18423              		.loc 1 176 0
 18424 000e 40EA0202 		orr	r2, r0, r2
 18425              	.LVL5:
 177:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   /* Store the new value */
 178:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   PWR->CR = tmpreg;
 18426              		.loc 1 178 0
 18427 0012 1A60     		str	r2, [r3, #0]
 179:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** }
 18428              		.loc 1 179 0
 18429 0014 7047     		bx	lr
 18430              		.cfi_endproc
 18431              	.LFE32:
 18433 0016 00BF     		.section	.text.PWR_WakeUpPinCmd,"ax",%progbits
 18434              		.align	2
 18435              		.global	PWR_WakeUpPinCmd
 18436              		.thumb
 18437              		.thumb_func
 18439              	PWR_WakeUpPinCmd:
 18440              	.LFB33:
 180:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** 
 181:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** /**
 182:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   * @brief  Enables or disables the WakeUp Pin functionality.
 183:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   * @param  NewState: new state of the WakeUp Pin functionality.
 184:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   *   This parameter can be: ENABLE or DISABLE.
 185:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   * @retval None
 186:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   */
 187:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** void PWR_WakeUpPinCmd(FunctionalState NewState)
 188:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** {
 18441              		.loc 1 188 0
 18442              		.cfi_startproc
 18443              		@ args = 0, pretend = 0, frame = 0
 18444              		@ frame_needed = 0, uses_anonymous_args = 0
 18445              		@ link register save eliminated.
 18446              	.LVL6:
 189:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   /* Check the parameters */
 190:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 191:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   *(__IO uint32_t *) CSR_EWUP_BB = (uint32_t)NewState;
 18447              		.loc 1 191 0
 18448 0000 40F2A003 		movw	r3, #:lower16:1108213920
 18449 0004 C4F20E23 		movt	r3, #:upper16:1108213920
 18450 0008 1860     		str	r0, [r3, #0]
 192:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** }
 18451              		.loc 1 192 0
 18452 000a 7047     		bx	lr
 18453              		.cfi_endproc
 18454              	.LFE33:
 18456              		.section	.text.PWR_EnterSTOPMode,"ax",%progbits
 18457              		.align	2
 18458              		.global	PWR_EnterSTOPMode
 18459              		.thumb
 18460              		.thumb_func
 18462              	PWR_EnterSTOPMode:
 18463              	.LFB34:
 193:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** 
 194:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** /**
 195:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   * @brief  Enters STOP mode.
 196:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   * @param  PWR_Regulator: specifies the regulator state in STOP mode.
 197:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   *   This parameter can be one of the following values:
 198:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   *     @arg PWR_Regulator_ON: STOP mode with regulator ON
 199:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   *     @arg PWR_Regulator_LowPower: STOP mode with regulator in low power mode
 200:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   * @param  PWR_STOPEntry: specifies if STOP mode in entered with WFI or WFE instruction.
 201:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   *   This parameter can be one of the following values:
 202:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   *     @arg PWR_STOPEntry_WFI: enter STOP mode with WFI instruction
 203:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   *     @arg PWR_STOPEntry_WFE: enter STOP mode with WFE instruction
 204:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   * @retval None
 205:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   */
 206:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** void PWR_EnterSTOPMode(uint32_t PWR_Regulator, uint8_t PWR_STOPEntry)
 207:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** {
 18464              		.loc 1 207 0
 18465              		.cfi_startproc
 18466              		@ args = 0, pretend = 0, frame = 0
 18467              		@ frame_needed = 0, uses_anonymous_args = 0
 18468              		@ link register save eliminated.
 18469              	.LVL7:
 208:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   uint32_t tmpreg = 0;
 209:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   /* Check the parameters */
 210:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   assert_param(IS_PWR_REGULATOR(PWR_Regulator));
 211:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   assert_param(IS_PWR_STOP_ENTRY(PWR_STOPEntry));
 212:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   
 213:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   /* Select the regulator state in STOP mode ---------------------------------*/
 214:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   tmpreg = PWR->CR;
 18470              		.loc 1 214 0
 18471 0000 47F20003 		movw	r3, #:lower16:1073770496
 18472 0004 C4F20003 		movt	r3, #:upper16:1073770496
 18473 0008 1A68     		ldr	r2, [r3, #0]
 18474              	.LVL8:
 215:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   /* Clear PDDS and LPDS bits */
 216:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   tmpreg &= CR_DS_Mask;
 18475              		.loc 1 216 0
 18476 000a 22F00302 		bic	r2, r2, #3
 18477              	.LVL9:
 217:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   /* Set LPDS bit according to PWR_Regulator value */
 218:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   tmpreg |= PWR_Regulator;
 18478              		.loc 1 218 0
 18479 000e 40EA0202 		orr	r2, r0, r2
 18480              	.LVL10:
 219:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   /* Store the new value */
 220:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   PWR->CR = tmpreg;
 18481              		.loc 1 220 0
 18482 0012 1A60     		str	r2, [r3, #0]
 221:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
 222:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   *(__IO uint32_t *) SCB_SysCtrl |= SysCtrl_SLEEPDEEP_Set;
 18483              		.loc 1 222 0
 18484 0014 4EF61053 		movw	r3, #:lower16:-536810224
 18485 0018 CEF20003 		movt	r3, #:upper16:-536810224
 18486 001c 1A68     		ldr	r2, [r3, #0]
 18487              	.LVL11:
 18488 001e 42F00402 		orr	r2, r2, #4
 18489 0022 1A60     		str	r2, [r3, #0]
 223:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   
 224:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   /* Select STOP mode entry --------------------------------------------------*/
 225:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   if(PWR_STOPEntry == PWR_STOPEntry_WFI)
 18490              		.loc 1 225 0
 18491 0024 0129     		cmp	r1, #1
 18492 0026 01D1     		bne	.L10
 18493              	.LBB8:
 18494              	.LBB9:
   1:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**************************************************************************//**
   2:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @file     core_cm3.h
   3:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief    CMSIS Cortex-M3 Core Peripheral Access Layer Header File
   4:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @version  V1.30
   5:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @date     30. October 2009
   6:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
   7:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @note
   8:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Copyright (C) 2009 ARM Limited. All rights reserved.
   9:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
  10:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @par
  11:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M 
  12:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * processor based microcontrollers.  This file can be freely distributed 
  13:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * within development tools that are supporting such ARM based processors. 
  14:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
  15:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @par
  16:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
  22:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  ******************************************************************************/
  23:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
  24:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #ifndef __CM3_CORE_H__
  25:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define __CM3_CORE_H__
  26:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
  27:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /** @addtogroup CMSIS_CM3_core_LintCinfiguration CMSIS CM3 Core Lint Configuration
  28:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
  29:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * List of Lint messages which will be suppressed and not shown:
  30:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *   - Error 10: \n
  31:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *     register uint32_t __regBasePri         __asm("basepri"); \n
  32:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *     Error 10: Expecting ';'
  33:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * .
  34:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *   - Error 530: \n
  35:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *     return(__regBasePri); \n
  36:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *     Warning 530: Symbol '__regBasePri' (line 264) not initialized
  37:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * . 
  38:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *   - Error 550: \n
  39:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *     __regBasePri = (basePri & 0x1ff); \n
  40:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *     Warning 550: Symbol '__regBasePri' (line 271) not accessed
  41:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * .
  42:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *   - Error 754: \n
  43:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *     uint32_t RESERVED0[24]; \n
  44:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *     Info 754: local structure member '<some, not used in the HAL>' (line 109, file ./cm3_core.h)
  45:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * .
  46:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *   - Error 750: \n
  47:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *     #define __CM3_CORE_H__ \n
  48:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *     Info 750: local macro '__CM3_CORE_H__' (line 43, file./cm3_core.h) not referenced
  49:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * .
  50:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *   - Error 528: \n
  51:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *     static __INLINE void NVIC_DisableIRQ(uint32_t IRQn) \n
  52:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *     Warning 528: Symbol 'NVIC_DisableIRQ(unsigned int)' (line 419, file ./cm3_core.h) not refere
  53:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * .
  54:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *   - Error 751: \n
  55:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *     } InterruptType_Type; \n
  56:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *     Info 751: local typedef 'InterruptType_Type' (line 170, file ./cm3_core.h) not referenced
  57:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * .
  58:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Note:  To re-enable a Message, insert a space before 'lint' *
  59:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
  60:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
  61:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
  62:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /*lint -save */
  63:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /*lint -e10  */
  64:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /*lint -e530 */
  65:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /*lint -e550 */
  66:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /*lint -e754 */
  67:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /*lint -e750 */
  68:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /*lint -e528 */
  69:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /*lint -e751 */
  70:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
  71:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
  72:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /** @addtogroup CMSIS_CM3_core_definitions CM3 Core Definitions
  73:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   This file defines all structures and symbols for CMSIS core:
  74:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****     - CMSIS version number
  75:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****     - Cortex-M core registers and bitfields
  76:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****     - Cortex-M core peripheral base address
  77:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   @{
  78:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
  79:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
  80:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #ifdef __cplusplus
  81:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  extern "C" {
  82:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #endif 
  83:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
  84:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define __CM3_CMSIS_VERSION_MAIN  (0x01)                                                       /*!<
  85:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define __CM3_CMSIS_VERSION_SUB   (0x30)                                                       /*!<
  86:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define __CM3_CMSIS_VERSION       ((__CM3_CMSIS_VERSION_MAIN << 16) | __CM3_CMSIS_VERSION_SUB) /*!<
  87:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
  88:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define __CORTEX_M                (0x03)                                                       /*!<
  89:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
  90:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #include <stdint.h>                           /* Include standard types */
  91:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
  92:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #if defined (__ICCARM__)
  93:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   #include <intrinsics.h>                     /* IAR Intrinsics   */
  94:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #endif
  95:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
  96:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
  97:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #ifndef __NVIC_PRIO_BITS
  98:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   #define __NVIC_PRIO_BITS    4               /*!< standard definition for NVIC Priority Bits */
  99:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #endif
 100:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 101:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 102:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 103:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 104:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
 105:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * IO definitions
 106:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 107:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * define access restrictions to peripheral registers
 108:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
 109:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 110:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #ifdef __cplusplus
 111:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   #define     __I     volatile                /*!< defines 'read only' permissions      */
 112:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #else
 113:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   #define     __I     volatile const          /*!< defines 'read only' permissions      */
 114:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #endif
 115:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define     __O     volatile                  /*!< defines 'write only' permissions     */
 116:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define     __IO    volatile                  /*!< defines 'read / write' permissions   */
 117:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 118:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 119:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 120:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /*******************************************************************************
 121:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *                 Register Abstraction
 122:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  ******************************************************************************/
 123:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /** @addtogroup CMSIS_CM3_core_register CMSIS CM3 Core Register
 124:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  @{
 125:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** */
 126:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 127:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 128:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /** @addtogroup CMSIS_CM3_NVIC CMSIS CM3 NVIC
 129:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   memory mapped structure for Nested Vectored Interrupt Controller (NVIC)
 130:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   @{
 131:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
 132:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** typedef struct
 133:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** {
 134:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t ISER[8];                      /*!< Offset: 0x000  Interrupt Set Enable Register    
 135:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****        uint32_t RESERVED0[24];                                   
 136:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t ICER[8];                      /*!< Offset: 0x080  Interrupt Clear Enable Register  
 137:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****        uint32_t RSERVED1[24];                                    
 138:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t ISPR[8];                      /*!< Offset: 0x100  Interrupt Set Pending Register   
 139:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****        uint32_t RESERVED2[24];                                   
 140:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t ICPR[8];                      /*!< Offset: 0x180  Interrupt Clear Pending Register 
 141:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****        uint32_t RESERVED3[24];                                   
 142:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t IABR[8];                      /*!< Offset: 0x200  Interrupt Active bit Register    
 143:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****        uint32_t RESERVED4[56];                                   
 144:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint8_t  IP[240];                      /*!< Offset: 0x300  Interrupt Priority Register (8Bit
 145:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****        uint32_t RESERVED5[644];                                  
 146:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __O  uint32_t STIR;                         /*!< Offset: 0xE00  Software Trigger Interrupt Regist
 147:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** }  NVIC_Type;                                               
 148:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_NVIC */
 149:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 150:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 151:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /** @addtogroup CMSIS_CM3_SCB CMSIS CM3 SCB
 152:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   memory mapped structure for System Control Block (SCB)
 153:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   @{
 154:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
 155:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** typedef struct
 156:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** {
 157:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __I  uint32_t CPUID;                        /*!< Offset: 0x00  CPU ID Base Register              
 158:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t ICSR;                         /*!< Offset: 0x04  Interrupt Control State Register  
 159:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t VTOR;                         /*!< Offset: 0x08  Vector Table Offset Register      
 160:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t AIRCR;                        /*!< Offset: 0x0C  Application Interrupt / Reset Cont
 161:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t SCR;                          /*!< Offset: 0x10  System Control Register           
 162:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t CCR;                          /*!< Offset: 0x14  Configuration Control Register    
 163:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint8_t  SHP[12];                      /*!< Offset: 0x18  System Handlers Priority Registers
 164:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t SHCSR;                        /*!< Offset: 0x24  System Handler Control and State R
 165:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t CFSR;                         /*!< Offset: 0x28  Configurable Fault Status Register
 166:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t HFSR;                         /*!< Offset: 0x2C  Hard Fault Status Register        
 167:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t DFSR;                         /*!< Offset: 0x30  Debug Fault Status Register       
 168:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t MMFAR;                        /*!< Offset: 0x34  Mem Manage Address Register       
 169:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t BFAR;                         /*!< Offset: 0x38  Bus Fault Address Register        
 170:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t AFSR;                         /*!< Offset: 0x3C  Auxiliary Fault Status Register   
 171:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __I  uint32_t PFR[2];                       /*!< Offset: 0x40  Processor Feature Register        
 172:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __I  uint32_t DFR;                          /*!< Offset: 0x48  Debug Feature Register            
 173:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __I  uint32_t ADR;                          /*!< Offset: 0x4C  Auxiliary Feature Register        
 174:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __I  uint32_t MMFR[4];                      /*!< Offset: 0x50  Memory Model Feature Register     
 175:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __I  uint32_t ISAR[5];                      /*!< Offset: 0x60  ISA Feature Register              
 176:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** } SCB_Type;                                                
 177:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 178:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* SCB CPUID Register Definitions */
 179:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 180:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFul << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 181:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 182:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 183:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_CPUID_VARIANT_Msk              (0xFul << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 184:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 185:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 186:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFul << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 187:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 188:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 189:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_CPUID_REVISION_Msk             (0xFul << SCB_CPUID_REVISION_Pos)              /*!< SCB 
 190:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 191:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 192:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 193:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1ul << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 194:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 195:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 196:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_ICSR_PENDSVSET_Msk             (1ul << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 197:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 198:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 199:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1ul << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 200:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 201:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 202:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_ICSR_PENDSTSET_Msk             (1ul << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 203:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 204:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 205:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1ul << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 206:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 207:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 208:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1ul << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 209:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 210:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 211:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_ICSR_ISRPENDING_Msk            (1ul << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 212:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 213:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 214:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFul << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 215:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 216:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 217:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_ICSR_RETTOBASE_Msk             (1ul << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 218:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 219:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 220:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFul << SCB_ICSR_VECTACTIVE_Pos)           /*!< SCB 
 221:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 222:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 223:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_VTOR_TBLBASE_Pos               29                                             /*!< SCB 
 224:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_VTOR_TBLBASE_Msk               (0x1FFul << SCB_VTOR_TBLBASE_Pos)              /*!< SCB 
 225:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 226:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 227:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x3FFFFFul << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 228:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 229:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 230:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 231:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFul << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 232:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 233:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 234:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFul << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 235:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 236:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 237:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1ul << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 238:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 239:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 240:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7ul << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 241:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 242:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 243:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1ul << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 244:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 245:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 246:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1ul << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 247:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 248:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 249:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_AIRCR_VECTRESET_Msk            (1ul << SCB_AIRCR_VECTRESET_Pos)               /*!< SCB 
 250:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 251:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* SCB System Control Register Definitions */
 252:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 253:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SCR_SEVONPEND_Msk              (1ul << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 254:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 255:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 256:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1ul << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 257:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 258:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 259:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1ul << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 260:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 261:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* SCB Configuration Control Register Definitions */
 262:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 263:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_CCR_STKALIGN_Msk               (1ul << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 264:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 265:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 266:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1ul << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 267:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 268:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 269:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1ul << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 270:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 271:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 272:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1ul << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 273:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 274:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 275:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_CCR_USERSETMPEND_Msk           (1ul << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 276:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 277:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 278:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1ul << SCB_CCR_NONBASETHRDENA_Pos)            /*!< SCB 
 279:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 280:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* SCB System Handler Control and State Register Definitions */
 281:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
 282:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1ul << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 283:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 284:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 285:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1ul << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 286:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 287:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 288:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1ul << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 289:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 290:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 291:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1ul << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 292:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 293:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 294:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1ul << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 295:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 296:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 297:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1ul << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 298:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 299:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 300:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1ul << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 301:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 302:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 303:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1ul << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 304:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 305:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 306:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1ul << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 307:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 308:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 309:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SHCSR_MONITORACT_Msk           (1ul << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 310:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 311:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 312:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1ul << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 313:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****                                      
 314:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 315:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1ul << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 316:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 317:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
 318:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1ul << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 319:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 320:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 321:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1ul << SCB_SHCSR_MEMFAULTACT_Pos)             /*!< SCB 
 322:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 323:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* SCB Configurable Fault Status Registers Definitions */
 324:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 325:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFul << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 326:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 327:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 328:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFul << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 329:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 330:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 331:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFul << SCB_CFSR_MEMFAULTSR_Pos)            /*!< SCB 
 332:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 333:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* SCB Hard Fault Status Registers Definitions */
 334:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 335:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1ul << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 336:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 337:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 338:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_HFSR_FORCED_Msk                (1ul << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 339:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 340:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 341:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_HFSR_VECTTBL_Msk               (1ul << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 342:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 343:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* SCB Debug Fault Status Register Definitions */
 344:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 345:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_DFSR_EXTERNAL_Msk              (1ul << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 346:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 347:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 348:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_DFSR_VCATCH_Msk                (1ul << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 349:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 350:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 351:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_DFSR_DWTTRAP_Msk               (1ul << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 352:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 353:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 354:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_DFSR_BKPT_Msk                  (1ul << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 355:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 356:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 357:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_DFSR_HALTED_Msk                (1ul << SCB_DFSR_HALTED_Pos)                   /*!< SCB 
 358:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SCB */
 359:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 360:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 361:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /** @addtogroup CMSIS_CM3_SysTick CMSIS CM3 SysTick
 362:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   memory mapped structure for SysTick
 363:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   @{
 364:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
 365:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** typedef struct
 366:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** {
 367:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x00  SysTick Control and Status Registe
 368:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t LOAD;                         /*!< Offset: 0x04  SysTick Reload Value Register     
 369:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t VAL;                          /*!< Offset: 0x08  SysTick Current Value Register    
 370:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __I  uint32_t CALIB;                        /*!< Offset: 0x0C  SysTick Calibration Register      
 371:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** } SysTick_Type;
 372:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 373:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* SysTick Control / Status Register Definitions */
 374:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
 375:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1ul << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 376:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 377:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 378:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1ul << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 379:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 380:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 381:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SysTick_CTRL_TICKINT_Msk           (1ul << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 382:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 383:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 384:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SysTick_CTRL_ENABLE_Msk            (1ul << SysTick_CTRL_ENABLE_Pos)               /*!< SysT
 385:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 386:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* SysTick Reload Register Definitions */
 387:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 388:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFul << SysTick_LOAD_RELOAD_Pos)        /*!< SysT
 389:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 390:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* SysTick Current Register Definitions */
 391:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 392:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 393:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 394:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* SysTick Calibration Register Definitions */
 395:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 396:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SysTick_CALIB_NOREF_Msk            (1ul << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 397:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 398:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 399:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SysTick_CALIB_SKEW_Msk             (1ul << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 400:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 401:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 402:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 403:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SysTick */
 404:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 405:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 406:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /** @addtogroup CMSIS_CM3_ITM CMSIS CM3 ITM
 407:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   memory mapped structure for Instrumentation Trace Macrocell (ITM)
 408:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   @{
 409:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
 410:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** typedef struct
 411:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** {
 412:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __O  union  
 413:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   {
 414:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****     __O  uint8_t    u8;                       /*!< Offset:       ITM Stimulus Port 8-bit           
 415:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****     __O  uint16_t   u16;                      /*!< Offset:       ITM Stimulus Port 16-bit          
 416:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****     __O  uint32_t   u32;                      /*!< Offset:       ITM Stimulus Port 32-bit          
 417:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   }  PORT [32];                               /*!< Offset: 0x00  ITM Stimulus Port Registers       
 418:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****        uint32_t RESERVED0[864];                                 
 419:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t TER;                          /*!< Offset:       ITM Trace Enable Register         
 420:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****        uint32_t RESERVED1[15];                                  
 421:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t TPR;                          /*!< Offset:       ITM Trace Privilege Register      
 422:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****        uint32_t RESERVED2[15];                                  
 423:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t TCR;                          /*!< Offset:       ITM Trace Control Register        
 424:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****        uint32_t RESERVED3[29];                                  
 425:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t IWR;                          /*!< Offset:       ITM Integration Write Register    
 426:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t IRR;                          /*!< Offset:       ITM Integration Read Register     
 427:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t IMCR;                         /*!< Offset:       ITM Integration Mode Control Regis
 428:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****        uint32_t RESERVED4[43];                                  
 429:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t LAR;                          /*!< Offset:       ITM Lock Access Register          
 430:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t LSR;                          /*!< Offset:       ITM Lock Status Register          
 431:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****        uint32_t RESERVED5[6];                                   
 432:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __I  uint32_t PID4;                         /*!< Offset:       ITM Peripheral Identification Regi
 433:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __I  uint32_t PID5;                         /*!< Offset:       ITM Peripheral Identification Regi
 434:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __I  uint32_t PID6;                         /*!< Offset:       ITM Peripheral Identification Regi
 435:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __I  uint32_t PID7;                         /*!< Offset:       ITM Peripheral Identification Regi
 436:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __I  uint32_t PID0;                         /*!< Offset:       ITM Peripheral Identification Regi
 437:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __I  uint32_t PID1;                         /*!< Offset:       ITM Peripheral Identification Regi
 438:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __I  uint32_t PID2;                         /*!< Offset:       ITM Peripheral Identification Regi
 439:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __I  uint32_t PID3;                         /*!< Offset:       ITM Peripheral Identification Regi
 440:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __I  uint32_t CID0;                         /*!< Offset:       ITM Component  Identification Regi
 441:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __I  uint32_t CID1;                         /*!< Offset:       ITM Component  Identification Regi
 442:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __I  uint32_t CID2;                         /*!< Offset:       ITM Component  Identification Regi
 443:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __I  uint32_t CID3;                         /*!< Offset:       ITM Component  Identification Regi
 444:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** } ITM_Type;                                                
 445:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 446:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* ITM Trace Privilege Register Definitions */
 447:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define ITM_TPR_PRIVMASK_Pos                0                                             /*!< ITM 
 448:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFul << ITM_TPR_PRIVMASK_Pos)                /*!< ITM 
 449:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 450:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* ITM Trace Control Register Definitions */
 451:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define ITM_TCR_BUSY_Pos                   23                                             /*!< ITM 
 452:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define ITM_TCR_BUSY_Msk                   (1ul << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 453:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 454:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define ITM_TCR_ATBID_Pos                  16                                             /*!< ITM 
 455:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define ITM_TCR_ATBID_Msk                  (0x7Ful << ITM_TCR_ATBID_Pos)                  /*!< ITM 
 456:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 457:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define ITM_TCR_TSPrescale_Pos              8                                             /*!< ITM 
 458:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define ITM_TCR_TSPrescale_Msk             (3ul << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 459:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 460:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define ITM_TCR_SWOENA_Pos                  4                                             /*!< ITM 
 461:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define ITM_TCR_SWOENA_Msk                 (1ul << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 462:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 463:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define ITM_TCR_DWTENA_Pos                  3                                             /*!< ITM 
 464:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define ITM_TCR_DWTENA_Msk                 (1ul << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 465:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 466:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define ITM_TCR_SYNCENA_Pos                 2                                             /*!< ITM 
 467:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define ITM_TCR_SYNCENA_Msk                (1ul << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 468:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 469:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define ITM_TCR_TSENA_Pos                   1                                             /*!< ITM 
 470:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define ITM_TCR_TSENA_Msk                  (1ul << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 471:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 472:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define ITM_TCR_ITMENA_Pos                  0                                             /*!< ITM 
 473:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define ITM_TCR_ITMENA_Msk                 (1ul << ITM_TCR_ITMENA_Pos)                    /*!< ITM 
 474:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 475:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* ITM Integration Write Register Definitions */
 476:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define ITM_IWR_ATVALIDM_Pos                0                                             /*!< ITM 
 477:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define ITM_IWR_ATVALIDM_Msk               (1ul << ITM_IWR_ATVALIDM_Pos)                  /*!< ITM 
 478:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 479:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* ITM Integration Read Register Definitions */
 480:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define ITM_IRR_ATREADYM_Pos                0                                             /*!< ITM 
 481:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define ITM_IRR_ATREADYM_Msk               (1ul << ITM_IRR_ATREADYM_Pos)                  /*!< ITM 
 482:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 483:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* ITM Integration Mode Control Register Definitions */
 484:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define ITM_IMCR_INTEGRATION_Pos            0                                             /*!< ITM 
 485:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define ITM_IMCR_INTEGRATION_Msk           (1ul << ITM_IMCR_INTEGRATION_Pos)              /*!< ITM 
 486:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 487:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* ITM Lock Status Register Definitions */
 488:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define ITM_LSR_ByteAcc_Pos                 2                                             /*!< ITM 
 489:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define ITM_LSR_ByteAcc_Msk                (1ul << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 490:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 491:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define ITM_LSR_Access_Pos                  1                                             /*!< ITM 
 492:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define ITM_LSR_Access_Msk                 (1ul << ITM_LSR_Access_Pos)                    /*!< ITM 
 493:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 494:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define ITM_LSR_Present_Pos                 0                                             /*!< ITM 
 495:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define ITM_LSR_Present_Msk                (1ul << ITM_LSR_Present_Pos)                   /*!< ITM 
 496:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_ITM */
 497:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 498:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 499:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /** @addtogroup CMSIS_CM3_InterruptType CMSIS CM3 Interrupt Type
 500:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   memory mapped structure for Interrupt Type
 501:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   @{
 502:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
 503:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** typedef struct
 504:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** {
 505:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****        uint32_t RESERVED0;
 506:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __I  uint32_t ICTR;                         /*!< Offset: 0x04  Interrupt Control Type Register */
 507:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #if ((defined __CM3_REV) && (__CM3_REV >= 0x200))
 508:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t ACTLR;                        /*!< Offset: 0x08  Auxiliary Control Register      */
 509:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #else
 510:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****        uint32_t RESERVED1;
 511:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #endif
 512:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** } InterruptType_Type;
 513:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 514:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* Interrupt Controller Type Register Definitions */
 515:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Pos  0                                             /*!< Inte
 516:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Msk (0x1Ful << InterruptType_ICTR_INTLINESNUM_Pos) /*!< Inte
 517:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 518:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* Auxiliary Control Register Definitions */
 519:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Pos     2                                             /*!< Inte
 520:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Msk    (1ul << InterruptType_ACTLR_DISFOLD_Pos)       /*!< Inte
 521:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 522:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Pos  1                                             /*!< Inte
 523:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Msk (1ul << InterruptType_ACTLR_DISDEFWBUF_Pos)    /*!< Inte
 524:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 525:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Pos  0                                             /*!< Inte
 526:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Msk (1ul << InterruptType_ACTLR_DISMCYCINT_Pos)    /*!< Inte
 527:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_InterruptType */
 528:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 529:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 530:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 531:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /** @addtogroup CMSIS_CM3_MPU CMSIS CM3 MPU
 532:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   memory mapped structure for Memory Protection Unit (MPU)
 533:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   @{
 534:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
 535:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** typedef struct
 536:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** {
 537:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __I  uint32_t TYPE;                         /*!< Offset: 0x00  MPU Type Register                 
 538:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x04  MPU Control Register              
 539:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t RNR;                          /*!< Offset: 0x08  MPU Region RNRber Register        
 540:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t RBAR;                         /*!< Offset: 0x0C  MPU Region Base Address Register  
 541:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t RASR;                         /*!< Offset: 0x10  MPU Region Attribute and Size Regi
 542:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t RBAR_A1;                      /*!< Offset: 0x14  MPU Alias 1 Region Base Address Re
 543:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t RASR_A1;                      /*!< Offset: 0x18  MPU Alias 1 Region Attribute and S
 544:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t RBAR_A2;                      /*!< Offset: 0x1C  MPU Alias 2 Region Base Address Re
 545:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t RASR_A2;                      /*!< Offset: 0x20  MPU Alias 2 Region Attribute and S
 546:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t RBAR_A3;                      /*!< Offset: 0x24  MPU Alias 3 Region Base Address Re
 547:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t RASR_A3;                      /*!< Offset: 0x28  MPU Alias 3 Region Attribute and S
 548:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** } MPU_Type;                                                
 549:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 550:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* MPU Type Register */
 551:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
 552:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_TYPE_IREGION_Msk               (0xFFul << MPU_TYPE_IREGION_Pos)               /*!< MPU 
 553:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 554:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
 555:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_TYPE_DREGION_Msk               (0xFFul << MPU_TYPE_DREGION_Pos)               /*!< MPU 
 556:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 557:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
 558:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_TYPE_SEPARATE_Msk              (1ul << MPU_TYPE_SEPARATE_Pos)                 /*!< MPU 
 559:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 560:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* MPU Control Register */
 561:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
 562:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1ul << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
 563:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 564:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
 565:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_CTRL_HFNMIENA_Msk              (1ul << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
 566:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 567:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
 568:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_CTRL_ENABLE_Msk                (1ul << MPU_CTRL_ENABLE_Pos)                   /*!< MPU 
 569:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 570:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* MPU Region Number Register */
 571:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
 572:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_RNR_REGION_Msk                 (0xFFul << MPU_RNR_REGION_Pos)                 /*!< MPU 
 573:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 574:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* MPU Region Base Address Register */
 575:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
 576:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFul << MPU_RBAR_ADDR_Pos)             /*!< MPU 
 577:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 578:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
 579:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_RBAR_VALID_Msk                 (1ul << MPU_RBAR_VALID_Pos)                    /*!< MPU 
 580:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 581:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
 582:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_RBAR_REGION_Msk                (0xFul << MPU_RBAR_REGION_Pos)                 /*!< MPU 
 583:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 584:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* MPU Region Attribute and Size Register */
 585:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_RASR_XN_Pos                    28                                             /*!< MPU 
 586:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_RASR_XN_Msk                    (1ul << MPU_RASR_XN_Pos)                       /*!< MPU 
 587:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 588:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_RASR_AP_Pos                    24                                             /*!< MPU 
 589:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_RASR_AP_Msk                    (7ul << MPU_RASR_AP_Pos)                       /*!< MPU 
 590:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 591:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_RASR_TEX_Pos                   19                                             /*!< MPU 
 592:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_RASR_TEX_Msk                   (7ul << MPU_RASR_TEX_Pos)                      /*!< MPU 
 593:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 594:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_RASR_S_Pos                     18                                             /*!< MPU 
 595:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_RASR_S_Msk                     (1ul << MPU_RASR_S_Pos)                        /*!< MPU 
 596:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 597:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_RASR_C_Pos                     17                                             /*!< MPU 
 598:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_RASR_C_Msk                     (1ul << MPU_RASR_C_Pos)                        /*!< MPU 
 599:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 600:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_RASR_B_Pos                     16                                             /*!< MPU 
 601:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_RASR_B_Msk                     (1ul << MPU_RASR_B_Pos)                        /*!< MPU 
 602:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 603:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
 604:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_RASR_SRD_Msk                   (0xFFul << MPU_RASR_SRD_Pos)                   /*!< MPU 
 605:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 606:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
 607:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_RASR_SIZE_Msk                  (0x1Ful << MPU_RASR_SIZE_Pos)                  /*!< MPU 
 608:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 609:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_RASR_ENA_Pos                     0                                            /*!< MPU 
 610:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define MPU_RASR_ENA_Msk                    (0x1Ful << MPU_RASR_ENA_Pos)                  /*!< MPU 
 611:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 612:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_MPU */
 613:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #endif
 614:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 615:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 616:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /** @addtogroup CMSIS_CM3_CoreDebug CMSIS CM3 Core Debug
 617:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   memory mapped structure for Core Debug Register
 618:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   @{
 619:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
 620:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** typedef struct
 621:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** {
 622:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t DHCSR;                        /*!< Offset: 0x00  Debug Halting Control and Status R
 623:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __O  uint32_t DCRSR;                        /*!< Offset: 0x04  Debug Core Register Selector Regis
 624:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t DCRDR;                        /*!< Offset: 0x08  Debug Core Register Data Register 
 625:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __IO uint32_t DEMCR;                        /*!< Offset: 0x0C  Debug Exception and Monitor Contro
 626:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** } CoreDebug_Type;
 627:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 628:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* Debug Halting Control and Status Register */
 629:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
 630:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFul << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
 631:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 632:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
 633:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1ul << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
 634:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 635:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
 636:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1ul << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
 637:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 638:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
 639:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1ul << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
 640:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 641:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
 642:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1ul << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
 643:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 644:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
 645:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1ul << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
 646:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 647:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
 648:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1ul << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
 649:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 650:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
 651:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1ul << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
 652:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 653:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
 654:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1ul << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
 655:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 656:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
 657:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1ul << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
 658:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 659:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
 660:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1ul << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
 661:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 662:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
 663:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1ul << CoreDebug_DHCSR_C_DEBUGEN_Pos)         /*!< Core
 664:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 665:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* Debug Core Register Selector Register */
 666:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
 667:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1ul << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
 668:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 669:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
 670:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1Ful << CoreDebug_DCRSR_REGSEL_Pos)         /*!< Core
 671:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 672:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* Debug Exception and Monitor Control Register */
 673:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
 674:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1ul << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
 675:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 676:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
 677:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1ul << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
 678:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 679:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
 680:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1ul << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
 681:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 682:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
 683:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1ul << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
 684:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 685:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
 686:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1ul << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
 687:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 688:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
 689:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1ul << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
 690:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 691:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
 692:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1ul << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
 693:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 694:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
 695:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1ul << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
 696:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 697:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
 698:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1ul << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
 699:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 700:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
 701:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1ul << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
 702:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 703:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
 704:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1ul << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
 705:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 706:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
 707:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1ul << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
 708:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 709:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
 710:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1ul << CoreDebug_DEMCR_VC_CORERESET_Pos)      /*!< Core
 711:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_CoreDebug */
 712:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 713:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 714:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* Memory mapping of Cortex-M3 Hardware */
 715:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCS_BASE            (0xE000E000)                              /*!< System Control Space Bas
 716:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define ITM_BASE            (0xE0000000)                              /*!< ITM Base Address        
 717:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug_BASE      (0xE000EDF0)                              /*!< Core Debug Base Address 
 718:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SysTick_BASE        (SCS_BASE +  0x0010)                      /*!< SysTick Base Address    
 719:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define NVIC_BASE           (SCS_BASE +  0x0100)                      /*!< NVIC Base Address       
 720:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB_BASE            (SCS_BASE +  0x0D00)                      /*!< System Control Block Bas
 721:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 722:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define InterruptType       ((InterruptType_Type *) SCS_BASE)         /*!< Interrupt Type Register 
 723:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SCB                 ((SCB_Type *)           SCB_BASE)         /*!< SCB configuration struct
 724:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define SysTick             ((SysTick_Type *)       SysTick_BASE)     /*!< SysTick configuration st
 725:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define NVIC                ((NVIC_Type *)          NVIC_BASE)        /*!< NVIC configuration struc
 726:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define ITM                 ((ITM_Type *)           ITM_BASE)         /*!< ITM configuration struct
 727:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
 728:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 729:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 730:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90)                      /*!< Memory Protection Unit  
 731:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   #define MPU               ((MPU_Type*)            MPU_BASE)         /*!< Memory Protection Unit  
 732:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #endif
 733:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 734:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_core_register */
 735:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 736:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 737:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /*******************************************************************************
 738:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *                Hardware Abstraction Layer
 739:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  ******************************************************************************/
 740:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 741:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #if defined ( __CC_ARM   )
 742:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
 743:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
 744:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 745:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #elif defined ( __ICCARM__ )
 746:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   #define __ASM           __asm                                       /*!< asm keyword for IAR Comp
 747:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   #define __INLINE        inline                                      /*!< inline keyword for IAR C
 748:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 749:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #elif defined   (  __GNUC__  )
 750:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
 751:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
 752:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 753:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #elif defined   (  __TASKING__  )
 754:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 755:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 756:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 757:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #endif
 758:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 759:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 760:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* ###################  Compiler specific Intrinsics  ########################### */
 761:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 762:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #if defined ( __CC_ARM   ) /*------------------RealView Compiler -----------------*/
 763:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* ARM armcc specific functions */
 764:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 765:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define __enable_fault_irq                __enable_fiq
 766:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define __disable_fault_irq               __disable_fiq
 767:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 768:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define __NOP                             __nop
 769:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define __WFI                             __wfi
 770:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define __WFE                             __wfe
 771:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define __SEV                             __sev
 772:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define __ISB()                           __isb(0)
 773:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define __DSB()                           __dsb(0)
 774:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define __DMB()                           __dmb(0)
 775:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define __REV                             __rev
 776:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define __RBIT                            __rbit
 777:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define __LDREXB(ptr)                     ((unsigned char ) __ldrex(ptr))
 778:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define __LDREXH(ptr)                     ((unsigned short) __ldrex(ptr))
 779:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define __LDREXW(ptr)                     ((unsigned int  ) __ldrex(ptr))
 780:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 781:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 782:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 783:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 784:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 785:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* intrinsic unsigned long long __ldrexd(volatile void *ptr) */
 786:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* intrinsic int __strexd(unsigned long long val, volatile void *ptr) */
 787:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* intrinsic void __enable_irq();     */
 788:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* intrinsic void __disable_irq();    */
 789:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 790:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 791:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
 792:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Return the Process Stack Pointer
 793:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 794:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return ProcessStackPointer
 795:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 796:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Return the actual process stack pointer
 797:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
 798:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern uint32_t __get_PSP(void);
 799:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 800:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
 801:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Set the Process Stack Pointer
 802:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 803:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
 804:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 805:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
 806:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * (process stack pointer) Cortex processor register
 807:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
 808:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
 809:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 810:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
 811:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Return the Main Stack Pointer
 812:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 813:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return Main Stack Pointer
 814:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 815:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
 816:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Cortex processor register
 817:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
 818:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern uint32_t __get_MSP(void);
 819:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 820:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
 821:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Set the Main Stack Pointer
 822:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 823:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
 824:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 825:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
 826:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * (main stack pointer) Cortex processor register
 827:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
 828:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
 829:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 830:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
 831:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
 832:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 833:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param   value  value to reverse
 834:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return         reversed value
 835:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 836:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Reverse byte order in unsigned short value
 837:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
 838:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern uint32_t __REV16(uint16_t value);
 839:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 840:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
 841:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
 842:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 843:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param   value  value to reverse
 844:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return         reversed value
 845:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 846:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
 847:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
 848:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern int32_t __REVSH(int16_t value);
 849:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 850:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 851:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #if (__ARMCC_VERSION < 400000)
 852:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 853:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
 854:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 855:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 856:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 857:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
 858:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern void __CLREX(void);
 859:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 860:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
 861:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Return the Base Priority value
 862:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 863:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return BasePriority
 864:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 865:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Return the content of the base priority register
 866:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
 867:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern uint32_t __get_BASEPRI(void);
 868:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 869:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
 870:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Set the Base Priority value
 871:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 872:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  basePri  BasePriority
 873:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 874:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Set the base priority register
 875:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
 876:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
 877:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 878:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
 879:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Return the Priority Mask value
 880:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 881:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return PriMask
 882:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 883:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 884:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
 885:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern uint32_t __get_PRIMASK(void);
 886:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 887:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
 888:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Set the Priority Mask value
 889:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 890:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param   priMask  PriMask
 891:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 892:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Set the priority mask bit in the priority mask register
 893:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
 894:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
 895:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 896:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
 897:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Return the Fault Mask value
 898:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 899:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return FaultMask
 900:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 901:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Return the content of the fault mask register
 902:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
 903:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
 904:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 905:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
 906:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Set the Fault Mask value
 907:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 908:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  faultMask faultMask value
 909:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 910:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Set the fault mask register
 911:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
 912:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
 913:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 914:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
 915:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Return the Control Register value
 916:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * 
 917:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return Control value
 918:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 919:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Return the content of the control register
 920:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
 921:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern uint32_t __get_CONTROL(void);
 922:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 923:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
 924:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Set the Control Register value
 925:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 926:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  control  Control value
 927:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 928:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Set the control register
 929:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
 930:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern void __set_CONTROL(uint32_t control);
 931:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 932:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #else  /* (__ARMCC_VERSION >= 400000)  */
 933:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 934:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
 935:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 936:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 937:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 938:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
 939:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define __CLREX                           __clrex
 940:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 941:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
 942:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Return the Base Priority value
 943:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 944:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return BasePriority
 945:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 946:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Return the content of the base priority register
 947:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
 948:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** static __INLINE uint32_t  __get_BASEPRI(void)
 949:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** {
 950:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 951:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   return(__regBasePri);
 952:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** }
 953:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 954:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
 955:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Set the Base Priority value
 956:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 957:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  basePri  BasePriority
 958:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 959:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Set the base priority register
 960:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
 961:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** static __INLINE void __set_BASEPRI(uint32_t basePri)
 962:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** {
 963:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 964:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __regBasePri = (basePri & 0xff);
 965:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** }
 966:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 967:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
 968:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Return the Priority Mask value
 969:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 970:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return PriMask
 971:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 972:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 973:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
 974:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** static __INLINE uint32_t __get_PRIMASK(void)
 975:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** {
 976:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 977:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   return(__regPriMask);
 978:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** }
 979:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 980:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
 981:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Set the Priority Mask value
 982:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 983:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  priMask  PriMask
 984:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 985:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Set the priority mask bit in the priority mask register
 986:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
 987:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** static __INLINE void __set_PRIMASK(uint32_t priMask)
 988:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** {
 989:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 990:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __regPriMask = (priMask);
 991:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** }
 992:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
 993:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
 994:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Return the Fault Mask value
 995:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 996:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return FaultMask
 997:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
 998:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Return the content of the fault mask register
 999:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1000:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** static __INLINE uint32_t __get_FAULTMASK(void)
1001:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** {
1002:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1003:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   return(__regFaultMask);
1004:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** }
1005:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1006:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1007:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Set the Fault Mask value
1008:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1009:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  faultMask  faultMask value
1010:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1011:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Set the fault mask register
1012:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1013:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** static __INLINE void __set_FAULTMASK(uint32_t faultMask)
1014:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** {
1015:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1016:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __regFaultMask = (faultMask & 1);
1017:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** }
1018:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1019:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1020:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Return the Control Register value
1021:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * 
1022:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return Control value
1023:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1024:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Return the content of the control register
1025:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1026:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** static __INLINE uint32_t __get_CONTROL(void)
1027:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** {
1028:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1029:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   return(__regControl);
1030:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** }
1031:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1032:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1033:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Set the Control Register value
1034:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1035:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  control  Control value
1036:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1037:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Set the control register
1038:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1039:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** static __INLINE void __set_CONTROL(uint32_t control)
1040:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** {
1041:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1042:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****   __regControl = control;
1043:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** }
1044:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1045:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #endif /* __ARMCC_VERSION  */ 
1046:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1047:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1048:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1049:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #elif (defined (__ICCARM__)) /*------------------ ICC Compiler -------------------*/
1050:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* IAR iccarm specific functions */
1051:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1052:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define __enable_irq                              __enable_interrupt        /*!< global Interrupt e
1053:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define __disable_irq                             __disable_interrupt       /*!< global Interrupt d
1054:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1055:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** static __INLINE void __enable_fault_irq()         { __ASM ("cpsie f"); }
1056:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** static __INLINE void __disable_fault_irq()        { __ASM ("cpsid f"); }
1057:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1058:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #define __NOP                                     __no_operation            /*!< no operation intri
1059:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** static __INLINE  void __WFI()                     { __ASM ("wfi"); }
1060:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** static __INLINE  void __WFE()                     { __ASM ("wfe"); }
1061:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** static __INLINE  void __SEV()                     { __ASM ("sev"); }
1062:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** static __INLINE  void __CLREX()                   { __ASM ("clrex"); }
1063:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1064:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* intrinsic void __ISB(void)                                     */
1065:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* intrinsic void __DSB(void)                                     */
1066:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* intrinsic void __DMB(void)                                     */
1067:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* intrinsic void __set_PRIMASK();                                */
1068:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* intrinsic void __get_PRIMASK();                                */
1069:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* intrinsic void __set_FAULTMASK();                              */
1070:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* intrinsic void __get_FAULTMASK();                              */
1071:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* intrinsic uint32_t __REV(uint32_t value);                      */
1072:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* intrinsic uint32_t __REVSH(uint32_t value);                    */
1073:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* intrinsic unsigned long __STREX(unsigned long, unsigned long); */
1074:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* intrinsic unsigned long __LDREX(unsigned long *);              */
1075:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1076:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1077:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1078:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Return the Process Stack Pointer
1079:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1080:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return ProcessStackPointer
1081:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1082:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Return the actual process stack pointer
1083:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1084:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern uint32_t __get_PSP(void);
1085:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1086:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1087:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Set the Process Stack Pointer
1088:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1089:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1090:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1091:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
1092:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * (process stack pointer) Cortex processor register
1093:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1094:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1095:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1096:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1097:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Return the Main Stack Pointer
1098:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1099:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return Main Stack Pointer
1100:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1101:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1102:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Cortex processor register
1103:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1104:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern uint32_t __get_MSP(void);
1105:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1106:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1107:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Set the Main Stack Pointer
1108:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1109:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1110:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1111:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
1112:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * (main stack pointer) Cortex processor register
1113:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1114:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1115:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1116:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1117:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1118:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1119:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  value  value to reverse
1120:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return        reversed value
1121:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1122:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Reverse byte order in unsigned short value
1123:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1124:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1125:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1126:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1127:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  Reverse bit order of value
1128:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1129:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  value  value to reverse
1130:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return        reversed value
1131:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1132:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Reverse bit order of value
1133:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1134:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1135:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1136:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1137:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1138:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1139:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  *addr  address pointer
1140:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return        value of (*address)
1141:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1142:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Exclusive LDR command for 8 bit values)
1143:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1144:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1145:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1146:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1147:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1148:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1149:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  *addr  address pointer
1150:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return        value of (*address)
1151:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1152:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Exclusive LDR command for 16 bit values
1153:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1154:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1155:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1156:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1157:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1158:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1159:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  *addr  address pointer
1160:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return        value of (*address)
1161:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1162:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Exclusive LDR command for 32 bit values
1163:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1164:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1165:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1166:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1167:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1168:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1169:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  value  value to store
1170:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  *addr  address pointer
1171:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return        successful / failed
1172:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1173:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Exclusive STR command for 8 bit values
1174:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1175:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1176:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1177:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1178:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1179:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1180:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  value  value to store
1181:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  *addr  address pointer
1182:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return        successful / failed
1183:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1184:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Exclusive STR command for 16 bit values
1185:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1186:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1187:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1188:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /**
1189:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1190:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1191:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  value  value to store
1192:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @param  *addr  address pointer
1193:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * @return        successful / failed
1194:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  *
1195:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  * Exclusive STR command for 32 bit values
1196:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h ****  */
1197:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1198:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1199:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1200:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1201:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** #elif (defined (__GNUC__)) /*------------------ GNU Compiler ---------------------*/
1202:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** /* GNU gcc specific functions */
1203:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1204:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** static __INLINE void __enable_irq()               { __ASM volatile ("cpsie i"); }
1205:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** static __INLINE void __disable_irq()              { __ASM volatile ("cpsid i"); }
1206:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1207:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** static __INLINE void __enable_fault_irq()         { __ASM volatile ("cpsie f"); }
1208:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** static __INLINE void __disable_fault_irq()        { __ASM volatile ("cpsid f"); }
1209:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** 
1210:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** static __INLINE void __NOP()                      { __ASM volatile ("nop"); }
1211:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** static __INLINE void __WFI()                      { __ASM volatile ("wfi"); }
 18495              		.loc 4 1211 0
 18496              	@ 1211 "F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport/core_cm3.h" 1
 18497 0028 30BF     		wfi
 18498              	@ 0 "" 2
 18499              		.thumb
 18500 002a 00E0     		b	.L11
 18501              	.L10:
 18502              	.LBE9:
 18503              	.LBE8:
 18504              	.LBB10:
 18505              	.LBB11:
1212:F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport\core_cm3.h **** static __INLINE void __WFE()                      { __ASM volatile ("wfe"); }
 18506              		.loc 4 1212 0
 18507              	@ 1212 "F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport/core_cm3.h" 1
 18508 002c 20BF     		wfe
 18509              	@ 0 "" 2
 18510              		.thumb
 18511              	.L11:
 18512              	.LBE11:
 18513              	.LBE10:
 226:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   {   
 227:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****     /* Request Wait For Interrupt */
 228:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****     __WFI();
 229:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   }
 230:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   else
 231:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   {
 232:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****     /* Request Wait For Event */
 233:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****     __WFE();
 234:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   }
 235:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   
 236:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   /* Reset SLEEPDEEP bit of Cortex System Control Register */
 237:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   *(__IO uint32_t *) SCB_SysCtrl &= SysCtrl_SLEEPDEEP_Reset;  
 18514              		.loc 1 237 0
 18515 002e 4EF61053 		movw	r3, #:lower16:-536810224
 18516 0032 CEF20003 		movt	r3, #:upper16:-536810224
 18517 0036 1A68     		ldr	r2, [r3, #0]
 18518 0038 22F00402 		bic	r2, r2, #4
 18519 003c 1A60     		str	r2, [r3, #0]
 238:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** }
 18520              		.loc 1 238 0
 18521 003e 7047     		bx	lr
 18522              		.cfi_endproc
 18523              	.LFE34:
 18525              		.section	.text.PWR_EnterSTANDBYMode,"ax",%progbits
 18526              		.align	2
 18527              		.global	PWR_EnterSTANDBYMode
 18528              		.thumb
 18529              		.thumb_func
 18531              	PWR_EnterSTANDBYMode:
 18532              	.LFB35:
 239:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** 
 240:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** /**
 241:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   * @brief  Enters STANDBY mode.
 242:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   * @param  None
 243:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   * @retval None
 244:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   */
 245:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** void PWR_EnterSTANDBYMode(void)
 246:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** {
 18533              		.loc 1 246 0
 18534              		.cfi_startproc
 18535              		@ args = 0, pretend = 0, frame = 0
 18536              		@ frame_needed = 0, uses_anonymous_args = 0
 18537              		@ link register save eliminated.
 247:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   /* Clear Wake-up flag */
 248:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   PWR->CR |= CR_CWUF_Set;
 18538              		.loc 1 248 0
 18539 0000 47F20003 		movw	r3, #:lower16:1073770496
 18540 0004 C4F20003 		movt	r3, #:upper16:1073770496
 18541 0008 1A68     		ldr	r2, [r3, #0]
 18542 000a 42F00402 		orr	r2, r2, #4
 18543 000e 1A60     		str	r2, [r3, #0]
 249:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   /* Select STANDBY mode */
 250:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   PWR->CR |= CR_PDDS_Set;
 18544              		.loc 1 250 0
 18545 0010 1A68     		ldr	r2, [r3, #0]
 18546 0012 42F00202 		orr	r2, r2, #2
 18547 0016 1A60     		str	r2, [r3, #0]
 251:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
 252:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   *(__IO uint32_t *) SCB_SysCtrl |= SysCtrl_SLEEPDEEP_Set;
 18548              		.loc 1 252 0
 18549 0018 4EF61053 		movw	r3, #:lower16:-536810224
 18550 001c CEF20003 		movt	r3, #:upper16:-536810224
 18551 0020 1A68     		ldr	r2, [r3, #0]
 18552 0022 42F00402 		orr	r2, r2, #4
 18553 0026 1A60     		str	r2, [r3, #0]
 18554              	.LBB12:
 18555              	.LBB13:
 18556              		.loc 4 1211 0
 18557              	@ 1211 "F:\Moje\STM32\workspace\MiniServerEU\Library\CMSIS\CM3\CoreSupport/core_cm3.h" 1
 18558 0028 30BF     		wfi
 18559              	@ 0 "" 2
 18560              		.thumb
 18561              	.LBE13:
 18562              	.LBE12:
 253:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** /* This option is used to ensure that store operations are completed */
 254:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** #if defined ( __CC_ARM   )
 255:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   __force_stores();
 256:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** #endif
 257:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   /* Request Wait For Interrupt */
 258:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   __WFI();
 259:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** }
 18563              		.loc 1 259 0
 18564 002a 7047     		bx	lr
 18565              		.cfi_endproc
 18566              	.LFE35:
 18568              		.section	.text.PWR_GetFlagStatus,"ax",%progbits
 18569              		.align	2
 18570              		.global	PWR_GetFlagStatus
 18571              		.thumb
 18572              		.thumb_func
 18574              	PWR_GetFlagStatus:
 18575              	.LFB36:
 260:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** 
 261:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** /**
 262:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   * @brief  Checks whether the specified PWR flag is set or not.
 263:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   * @param  PWR_FLAG: specifies the flag to check.
 264:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   *   This parameter can be one of the following values:
 265:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   *     @arg PWR_FLAG_WU: Wake Up flag
 266:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   *     @arg PWR_FLAG_SB: StandBy flag
 267:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   *     @arg PWR_FLAG_PVDO: PVD Output
 268:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   * @retval The new state of PWR_FLAG (SET or RESET).
 269:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   */
 270:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** FlagStatus PWR_GetFlagStatus(uint32_t PWR_FLAG)
 271:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** {
 18576              		.loc 1 271 0
 18577              		.cfi_startproc
 18578              		@ args = 0, pretend = 0, frame = 0
 18579              		@ frame_needed = 0, uses_anonymous_args = 0
 18580              		@ link register save eliminated.
 18581              	.LVL12:
 272:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   FlagStatus bitstatus = RESET;
 273:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   /* Check the parameters */
 274:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   assert_param(IS_PWR_GET_FLAG(PWR_FLAG));
 275:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   
 276:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   if ((PWR->CSR & PWR_FLAG) != (uint32_t)RESET)
 18582              		.loc 1 276 0
 18583 0000 47F20003 		movw	r3, #:lower16:1073770496
 18584 0004 C4F20003 		movt	r3, #:upper16:1073770496
 18585 0008 5B68     		ldr	r3, [r3, #4]
 18586 000a 1842     		tst	r0, r3
 277:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   {
 278:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****     bitstatus = SET;
 279:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   }
 280:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   else
 281:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   {
 282:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****     bitstatus = RESET;
 283:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   }
 284:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   /* Return the flag status */
 285:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   return bitstatus;
 286:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** }
 18587              		.loc 1 286 0
 18588 000c 0CBF     		ite	eq
 18589 000e 0020     		moveq	r0, #0
 18590 0010 0120     		movne	r0, #1
 18591              	.LVL13:
 18592 0012 7047     		bx	lr
 18593              		.cfi_endproc
 18594              	.LFE36:
 18596              		.section	.text.PWR_ClearFlag,"ax",%progbits
 18597              		.align	2
 18598              		.global	PWR_ClearFlag
 18599              		.thumb
 18600              		.thumb_func
 18602              	PWR_ClearFlag:
 18603              	.LFB37:
 287:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** 
 288:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** /**
 289:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   * @brief  Clears the PWR's pending flags.
 290:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   * @param  PWR_FLAG: specifies the flag to clear.
 291:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   *   This parameter can be one of the following values:
 292:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   *     @arg PWR_FLAG_WU: Wake Up flag
 293:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   *     @arg PWR_FLAG_SB: StandBy flag
 294:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   * @retval None
 295:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   */
 296:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** void PWR_ClearFlag(uint32_t PWR_FLAG)
 297:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** {
 18604              		.loc 1 297 0
 18605              		.cfi_startproc
 18606              		@ args = 0, pretend = 0, frame = 0
 18607              		@ frame_needed = 0, uses_anonymous_args = 0
 18608              		@ link register save eliminated.
 18609              	.LVL14:
 298:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   /* Check the parameters */
 299:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   assert_param(IS_PWR_CLEAR_FLAG(PWR_FLAG));
 300:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****          
 301:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c ****   PWR->CR |=  PWR_FLAG << 2;
 18610              		.loc 1 301 0
 18611 0000 47F20003 		movw	r3, #:lower16:1073770496
 18612 0004 C4F20003 		movt	r3, #:upper16:1073770496
 18613 0008 1A68     		ldr	r2, [r3, #0]
 18614 000a 42EA8002 		orr	r2, r2, r0, lsl #2
 18615 000e 1A60     		str	r2, [r3, #0]
 302:../Library/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c **** }
 18616              		.loc 1 302 0
 18617 0010 7047     		bx	lr
 18618              		.cfi_endproc
 18619              	.LFE37:
 18621 0012 00BF     		.section	.text.PWR_DeInit,"ax",%progbits
 18622              		.align	2
 18623              		.global	PWR_DeInit
 18624              		.thumb
 18625              		.thumb_func
 18627              	PWR_DeInit:
 18628              	.LFB29:
 18629              		.loc 1 122 0
 18630              		.cfi_startproc
 18631              		@ args = 0, pretend = 0, frame = 0
 18632              		@ frame_needed = 0, uses_anonymous_args = 0
 18633 0000 08B5     		push	{r3, lr}
 18634              	.LCFI0:
 18635              		.cfi_def_cfa_offset 8
 18636              		.loc 1 123 0
 18637 0002 4FF08050 		mov	r0, #268435456
 18638 0006 4FF00101 		mov	r1, #1
 18639              		.cfi_offset 14, -4
 18640              		.cfi_offset 3, -8
 18641 000a FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 18642              		.loc 1 124 0
 18643 000e 4FF08050 		mov	r0, #268435456
 18644 0012 4FF00001 		mov	r1, #0
 18645 0016 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 18646              		.loc 1 125 0
 18647 001a 08BD     		pop	{r3, pc}
 18648              		.cfi_endproc
 18649              	.LFE29:
 18651              		.text
 18652              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f10x_pwr.c
C:\Users\user\AppData\Local\Temp\ccpXWCzW.s:18356  .text.PWR_BackupAccessCmd:00000000 $t
C:\Users\user\AppData\Local\Temp\ccpXWCzW.s:18361  .text.PWR_BackupAccessCmd:00000000 PWR_BackupAccessCmd
C:\Users\user\AppData\Local\Temp\ccpXWCzW.s:18379  .text.PWR_PVDCmd:00000000 $t
C:\Users\user\AppData\Local\Temp\ccpXWCzW.s:18384  .text.PWR_PVDCmd:00000000 PWR_PVDCmd
C:\Users\user\AppData\Local\Temp\ccpXWCzW.s:18402  .text.PWR_PVDLevelConfig:00000000 $t
C:\Users\user\AppData\Local\Temp\ccpXWCzW.s:18407  .text.PWR_PVDLevelConfig:00000000 PWR_PVDLevelConfig
C:\Users\user\AppData\Local\Temp\ccpXWCzW.s:18434  .text.PWR_WakeUpPinCmd:00000000 $t
C:\Users\user\AppData\Local\Temp\ccpXWCzW.s:18439  .text.PWR_WakeUpPinCmd:00000000 PWR_WakeUpPinCmd
C:\Users\user\AppData\Local\Temp\ccpXWCzW.s:18457  .text.PWR_EnterSTOPMode:00000000 $t
C:\Users\user\AppData\Local\Temp\ccpXWCzW.s:18462  .text.PWR_EnterSTOPMode:00000000 PWR_EnterSTOPMode
C:\Users\user\AppData\Local\Temp\ccpXWCzW.s:18526  .text.PWR_EnterSTANDBYMode:00000000 $t
C:\Users\user\AppData\Local\Temp\ccpXWCzW.s:18531  .text.PWR_EnterSTANDBYMode:00000000 PWR_EnterSTANDBYMode
C:\Users\user\AppData\Local\Temp\ccpXWCzW.s:18569  .text.PWR_GetFlagStatus:00000000 $t
C:\Users\user\AppData\Local\Temp\ccpXWCzW.s:18574  .text.PWR_GetFlagStatus:00000000 PWR_GetFlagStatus
C:\Users\user\AppData\Local\Temp\ccpXWCzW.s:18597  .text.PWR_ClearFlag:00000000 $t
C:\Users\user\AppData\Local\Temp\ccpXWCzW.s:18602  .text.PWR_ClearFlag:00000000 PWR_ClearFlag
C:\Users\user\AppData\Local\Temp\ccpXWCzW.s:18622  .text.PWR_DeInit:00000000 $t
C:\Users\user\AppData\Local\Temp\ccpXWCzW.s:18627  .text.PWR_DeInit:00000000 PWR_DeInit
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB1PeriphResetCmd
